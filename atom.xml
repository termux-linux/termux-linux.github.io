<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>小豪笔录</title>
  
  <subtitle>Linux</subtitle>
  <link href="http://yoursite.com/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-10-10T03:58:48.889Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>小豪</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/posts/16107.html"/>
    <id>http://yoursite.com/posts/16107.html</id>
    <published>2020-10-10T03:58:48.889Z</published>
    <updated>2020-10-10T03:58:48.889Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Python数据结构部分</title>
    <link href="http://yoursite.com/posts/aaa7.html"/>
    <id>http://yoursite.com/posts/aaa7.html</id>
    <published>2020-09-29T02:00:44.000Z</published>
    <updated>2020-09-29T04:25:52.257Z</updated>
    
    <content type="html"><![CDATA[<p><strong><code>Python中数据结构主要有序列、集合和字典.</code></strong></p><hr><h1 id="元组"><a href="#元组" class="headerlink" title="元组"></a>元组</h1><hr><p><strong><code>元组是一种不可变序列，一旦创建就不能修改</code></strong></p><hr><ul><li><h3 id="创建元组"><a href="#创建元组" class="headerlink" title="创建元组"></a>创建元组</h3></li></ul><p><strong>创建元组可以使用tuple([it巳rable］）函数或者直接用逗号“，”将元素分隔。</strong></p><p><em>在PythonShell中运行示例代码如下</em>：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">32</span><span class="token punctuation">,</span><span class="token number">43</span><span class="token punctuation">,</span><span class="token number">45</span>                  ①<span class="token punctuation">(</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">32</span><span class="token punctuation">,</span><span class="token number">43</span><span class="token punctuation">,</span><span class="token number">45</span><span class="token punctuation">)</span>                   <span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">32</span><span class="token punctuation">,</span><span class="token number">43</span><span class="token punctuation">,</span><span class="token number">45</span><span class="token punctuation">)</span>                ②<span class="token punctuation">(</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">32</span><span class="token punctuation">,</span><span class="token number">43</span><span class="token punctuation">,</span><span class="token number">45</span><span class="token punctuation">)</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span>a<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">32</span><span class="token punctuation">,</span><span class="token number">43</span><span class="token punctuation">,</span><span class="token number">45</span><span class="token punctuation">)</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">32</span><span class="token punctuation">,</span><span class="token number">43</span><span class="token punctuation">,</span><span class="token number">45</span><span class="token punctuation">)</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token string">'Hello'</span><span class="token punctuation">,</span><span class="token string">'World'</span><span class="token punctuation">)</span>            ③<span class="token punctuation">(</span><span class="token string">'Hello'</span><span class="token punctuation">,</span><span class="token string">'World'</span><span class="token punctuation">)</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token string">'Hello'</span><span class="token punctuation">,</span><span class="token string">'World'</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span>      ④<span class="token punctuation">(</span><span class="token string">'Hello'</span><span class="token punctuation">,</span><span class="token string">'World'</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span>        <span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token builtin">tuple</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">32</span><span class="token punctuation">,</span><span class="token number">43</span><span class="token punctuation">,</span><span class="token number">45</span><span class="token punctuation">]</span><span class="token punctuation">)</span>         ⑤<span class="token punctuation">(</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">32</span><span class="token punctuation">,</span><span class="token number">43</span><span class="token punctuation">,</span><span class="token number">45</span><span class="token punctuation">)</span>      <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>1.代码第① 行创建了一个有4个元素的元组，创建元组时使用小括号把元素括起来不是必需;</li><li>2.代码第② 行使用小括号将元素括起来，仅提高程序的可读性；</li><li>3.代码第③ 行创建了一个字符串元组;</li><li>4.代码第④ 行创建了字符串和整数混合的元组;<br>Python中没有强制声明数据类型，因此元组中的元素可以是任何数据类型。<br>另外，元组还可以通过tuple([iterable］）函数创建，参数iterable可以是任何可迭代对象。</li><li>5.代码第⑤ 行使用了tuple（）函数创建元组对象，实参［21,32,43,45］是一个列表，列表是可选代对象，可以作为tuple（）函数参数创建元组对象。</li></ul><p><em>创建元组还需要注意如下极端情况</em>：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span>a<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">21</span><span class="token punctuation">)</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token builtin">type</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'int'</span><span class="token operator">&gt;</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span>a<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token builtin">type</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token keyword">class</span>'<span class="token builtin">tuple</span>’<span class="token operator">&gt;</span><span class="token operator">&gt;&gt;</span>a<span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;&gt;</span><span class="token builtin">type</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'tuple'</span>〉<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>当－个元组只有一个元素时，后面的逗号不能省略，即（21，）表示的是<br>只有一个元素的元组，而（21）表示的是一个整数。另外，（）可以创建空元组。</li></ul><hr><ul><li><h3 id="访问元组"><a href="#访问元组" class="headerlink" title="访问元组"></a>访问元组</h3></li></ul><hr><p><strong>元组作为序列可以通过下标索引访问其中的元素，也可以对其进行分片。</strong></p><p><em>在PythonShell中运行示例代码如下</em>：</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span>a<span class="token operator">=</span><span class="token punctuation">(</span><span class="token string">'Hello'</span>,<span class="token string">'World'</span>,1,2,3<span class="token punctuation">)</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span>a<span class="token punctuation">[</span>l<span class="token punctuation">]</span><span class="token string">'World'</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span>a<span class="token punctuation">[</span>l:3<span class="token punctuation">]</span>（<span class="token string">'World'</span>,1<span class="token punctuation">)</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span>a<span class="token punctuation">[</span><span class="token number">2</span>:<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token number">1,2</span>,3<span class="token punctuation">)</span><span class="token operator">&gt;&gt;</span>a<span class="token punctuation">[</span>:2<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token string">'Hello'</span>,<span class="token string">'World'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>上述代码第① 行是元组a,a[1］是访问元组第二个元素，表达式a[l:3］、a[2：］和a[:2]都是分片操作。</li></ul><p><strong>元组还可以进行拆包（Unpack)操作，就是将元组的元素取出赋值给不同变量。</strong></p><p><em>在PythonShell中运行示例代码如下</em>：</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span>a<span class="token operator">=</span><span class="token punctuation">(</span><span class="token string">'Hello'</span>，<span class="token string">'World'</span>,1,2,3<span class="token punctuation">)</span><span class="token operator">&gt;&gt;</span>strl,str2,nl,n2,n3<span class="token operator">=</span>a          ①<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span>strl<span class="token string">'Hello'</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span>str2<span class="token string">'World'</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span>nl<span class="token number">1</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span>n2<span class="token number">2</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span>n3<span class="token number">3</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span>strl,str2,*n<span class="token operator">=</span>a               ②<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span>strl<span class="token string">'Hello'</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span>str2<span class="token string">'World'</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span>n<span class="token punctuation">[</span><span class="token number">1,2</span>,3<span class="token punctuation">]</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span>strl,_,nl,n2,_<span class="token operator">=</span>a             ③<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>上述代码第① 行是将元组a进行拆包操作，接收拆包元素的变量个数应该等于元组个数，接收变量个数可以少于元组个数。</li><li>代码第② 行接收变量个数只有3个，最后一个很特殊，变量n前面有星号，表示将剩下的元素作为一个列表赋值给变量n。另外，还可以使用下画线指定不取值哪些元素，代码第③ 行表示不取第二个和第五个元素。</li></ul><hr><ul><li><h3 id="遍历元组"><a href="#遍历元组" class="headerlink" title="遍历元组"></a>遍历元组</h3></li></ul><hr><p><strong><code>一般使用for循环遍历元组</code></strong></p><p><em>示例代码如下</em>:</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">a<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">32</span><span class="token punctuation">,</span><span class="token number">43</span><span class="token punctuation">,</span><span class="token number">45</span><span class="token punctuation">)</span><span class="token keyword">for</span> item <span class="token keyword">in</span> a<span class="token punctuation">:</span>          ①     <span class="token keyword">print</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'-----------'</span><span class="token punctuation">)</span><span class="token keyword">for</span> i<span class="token punctuation">,</span> item <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">:</span>            ②    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'{0} - {1}'</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> item<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><em>输出结果如下</em>：</p><blockquote><p>21<br>32<br>43<br>45</p><hr><p>0 - 21<br>1 - 32<br>2 - 43<br>3 - 45</p></blockquote><ul><li>一般情况下遍历目的只是取出每一个元素值，见代码第① 行的for循环。但有时需要在遍历过程中同时获取索引，这时可以使用代码第② 行的for循环，其中enumerate(a）函数可以获得元组对象，该元组对象有两个元素，第一个元素是索引，第二个元素是数值。所以（i,item)是元组拆包过程，最后变量i是元组a的当前索引，item是元组a的当前元素值。</li></ul><hr><ul><li><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3></li></ul><hr><p><strong><code>列表(list)也是一种序列结构，与元组不同，列表具有可变性，可以追加、插入、删除和替换列表中的元素</code></strong></p><hr><ul><li><h3 id="创建列表"><a href="#创建列表" class="headerlink" title="创建列表"></a>创建列表</h3></li></ul><hr><p><strong>创建列表可以使用list([iterable］）函数，或者用中括号口将元素括起来，元素之间用逗号<br>分隔.</strong></p><p><em>在PythonShell中运行示例代码如下</em>：</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token number">20,10</span>,50,40,30<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">20,10</span>,50,40,30<span class="token punctuation">]</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token string">'Hello'</span>,<span class="token string">'World'</span>,1,2,3<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'Hello'</span>,<span class="token string">'World'</span>,1,2,3<span class="token punctuation">]</span><span class="token operator">&gt;&gt;</span>a<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token operator">&gt;&gt;</span>type<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token operator">&lt;</span>class'l工st『〉<span class="token operator">&gt;&gt;</span>a<span class="token operator">=</span><span class="token punctuation">[</span>lO,J<span class="token operator">&gt;&gt;</span>type<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token operator">&lt;</span>class’list’<span class="token operator">&gt;</span><span class="token operator">&gt;&gt;</span>list<span class="token variable"><span class="token punctuation">((</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">))</span></span><span class="token punctuation">[</span><span class="token number">20,10</span>,50,40,30<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上述代码第①行创建了一个有5个元素的列表，注意中括号不能省略，如果省略了中括号<br>那就变成元组了。创建空列表是口表达式。列表中可以放入任何对象，代码第②行是创建一<br>个字符串和整数混合的列表。代码第③行是创建只有一个元素的列表，中括号不能省赂。<br>另<br>外，无论是元组还是列表，<br>每一个元素后面都跟着一个逗号，<br>只是最后一个元素的逗号经常是<br>省略的，代码第④行最后一个元素没有省II自逗号。<br>另外，列表还可以通过list([iterable］）函数创建，参数iterable是任何可迭代对象。代码第<br>⑤行使用<br>list（）函数创建列表对象，实参（20,I0,50,40,30）是一个元组，元组是可迭代对象，<br>可以作为list（）函数参数创建列表对象。</p><hr><ul><li><h3 id="追加元素"><a href="#追加元素" class="headerlink" title="追加元素"></a>追加元素</h3></li></ul><hr><p>d（）方法。<br>append（）方法语法：<br>list.append(x)<br>其中x参数是要追加的单个元素值。<br>extend（）方法语法：<br>list.extend(t)<br>其中<br>t参数是要追加的另外一个列表。<br>在PythonShell中运行示例代码如下：</p><pre class="line-numbers language-none"><code class="language-none">&gt;&gt;studentlist＝［’张三’，”李囚’，’王五＇l&gt;&gt;studentlist.append（’董六’）①&gt;&gt;studentl工st［’张三’，’李囚’，’王五勺’盖六’］&gt;&gt;studentlist＋＝［’刘备’，E关羽’］②&gt;&gt;studentlist［『张三’，’李四川’王五’，’董六’，’刘备勺’关羽’］&gt;&gt;studentlist.extend（［’张飞’，’赵云’］）③&gt;&gt;studentlist［’张三’，’李四’，’王五’，’董六’，’刘备’，’关羽勺’张飞’，’赵云’］<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上述代码中第①行使用了append方法，在列表后面追加了一个元素，<br>append（）方法不能<br>同时追加多个元素。代码第②行利用＋＝运算符追加多个元素，能够支持＋＝运算是因为列表<br>支持＋运算。代码第③行使用了extend（）方法追加多个元素。</p><hr><ul><li><h3 id="插入元素"><a href="#插入元素" class="headerlink" title="插入元素"></a>插入元素</h3></li></ul><hr><p>插入元素可以使用列表的insert（）方法，<br>该方法可以在指定索引位置插入一个元素。<br>insert（）方法语法：<br>l工st<br>.工nsert（工，<br>x)<br>其中参数i是要插入的索引，<br>参数x是要插入的元素数值。<br>在PythonShell中运行示例代码如下：</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token operator">&gt;&gt;</span>studentlist<span class="token operator">=</span>［’张三’，『李囚’，’王五’］<span class="token operator">&gt;&gt;</span>studentlist.insert<span class="token punctuation">(</span><span class="token number">2</span>,’刘备’）<span class="token operator">&gt;&gt;</span>studentlist［’张三’，『李囚’，’刘备’，’王五’］上述代码中studentlist调用insert方法，在索号12位置插入一个元素，新元素的索引为2。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><ul><li><h3 id="替换元素"><a href="#替换元素" class="headerlink" title="替换元素"></a>替换元素</h3><p>列表具有可变性，其中的元素替换很简单，通过列表下标将索引元素放在赋值符号“＝”<br>左边，<br>进行赋值即可替换。在PythonShell中运行示例代码如下：</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token operator">&gt;&gt;</span>studentlist<span class="token operator">=</span>［’张三’，’李囚’，’王五＇l<span class="token operator">&gt;&gt;</span>studentlist<span class="token punctuation">[</span>O<span class="token punctuation">]</span>＝”诸葛亮”<span class="token operator">&gt;&gt;</span>studentlist［’诸葛亮’，’李四川’刘备’，’王五’］<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>其中student_list[O]＝”诸葛亮”替换了列表student_list的第一个元素。</p></li></ul><hr><ul><li><h3 id="删除元素"><a href="#删除元素" class="headerlink" title="删除元素"></a>删除元素</h3></li></ul><hr><p>列表中实现删除元素有两种方式，<br>一种是使用列表的remove（）方法，另一种是使用列表<br>的pop（）方法。<br>I)remove（）方法<br>remove（）方法从左到右查找列表中的元素，如果找到匹配元素则删除，注意如果找到多个<br>匹配元素，<br>只是删除第一个，如果没有找到则会抛出错误。<br>remove（）方法语法：<br>list.remove(x)<br>其中x参数是要找的元素值。<br>使用remove（）方法删除元素，示例代码如下：</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token operator">&gt;&gt;</span>studentlist<span class="token operator">=</span>［’张三’，’李囚’，’王五’，’王五’］<span class="token operator">&gt;</span>studentlist.remove（’王五’）<span class="token operator">&gt;&gt;</span>studentlist［’张三门’李囚’，’王五『］<span class="token operator">&gt;&gt;</span>studentlist.remove（’王五『）<span class="token operator">&gt;&gt;</span>studentlist［’张三’，’李囚’］<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>2)pop（）方法<br>pop（）方法也会删除列表中的元素，但它会将成功删除的元素返回。<br>pop（）方法语法如下：<br>item=list.pop([i])<br>参数<br>1是指定删除元素的索引，<br>i可以省略，<br>表示删除最后一个元素。返回值item是删除的元素。<br>使用pop（）方法删除元素示例代码如下：</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token operator">&gt;&gt;</span>studentlist<span class="token operator">=</span>［’张三’，’李囚’，’王五＇l<span class="token operator">&gt;&gt;</span>studentlist.pop<span class="token punctuation">(</span><span class="token punctuation">)</span>’王五’<span class="token operator">&gt;&gt;</span>studentlist［’张三’，’李囚＇l<span class="token operator">&gt;&gt;</span>student_list.pop<span class="token punctuation">(</span>O<span class="token punctuation">)</span>’张三『<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span>studentlist［’李凹’］<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><h3 id="其他常用方法"><a href="#其他常用方法" class="headerlink" title="其他常用方法"></a>其他常用方法</h3>前面介绍列表追加、插入和删除时，<br>己经介绍了一些方法。事实上列表还有很多方法，本<br>节再介绍几个常用的方法。<br>•reverse（）：倒置列表；<br>•copy（）：<br>复制列表；<br>•clear（）：<br>清除列表中的所有元素；<br>•index(x[,i[,j］］）：返回查找x第一次出现的索引，<br>1是开始查找索引，<br>j是结束查找索引，<br>该方法继承自序列，元组和字符串也可以使用该方法；<br>•count(x）：返回x出现的次数，该方法继承自序列，元组和字符串也可以使用该方法。</li></ul><hr><ul><li><h3 id="列表推导式"><a href="#列表推导式" class="headerlink" title="列表推导式"></a>列表推导式</h3>Python中有一种特殊表达式一一推导式，它可以将一种数据结构作为输入，经过过滤、计<br>算等处理，<br>最后输出另一种数据结构。根据数据结构的不同可分为列表推导式、集合推导式和<br>字典推导式。本节先介绍列表推导式。<br>如果想获得0～9中偶数的平方数列，可以通过for循环实现，代码如下：<br>#coding=utf-8<br>＃代码文件chapter9/ch9.27.py<br>nlist=(]<br>forx<br>l口<br>range(10):<br>ifx<br>毛<br>2<br>==0.<br>)<br>nd<br>中赛<br>中罚<br>x<br>(<br>AU<br>n<br>e<br>nr<br>nr<br>a</li><li>L<br>【、“、，，<br>工<br>t<br>145<br>－<br>I工<br>nl<br>n<br>(<br>•L<br>n<br>.l<br>r<br>p<br>输出结果如下：<br>(0,4,16,36,64]<br>0～9中偶数的平方数列也可以通过列表推导式实现，代码如下：<br>口list=[x女女<br>2forxinrange(lO)ifx<br>毛<br>2==OJ<br>①<br>print(n_list)<br>其中代码第①行就是列表推导式，输出的结果与for循环是一样的。图9-3所示是列表推<br>导式语法结构，其中in后面的表达式是“输入序列”；<br>for前面的表达式是“输出表达式”，它<br>的运算结果会保存一个新列表中：<br>if条件语句用来过滤输入序列，符合条件的才传递给输出表<br>达式，“条件语句”是可以省略的，所有元素都传递给输出表达式。</li></ul><hr><ul><li><h3 id="集合"><a href="#集合" class="headerlink" title="集合"></a>集合</h3>Cset）是一种可法代的、无序的、不能包含重复元素的数据<br>南岛；国结构。图9-4是一个班级的集合，其中包含一些学生，这些学生是无<br>回回归油序的，不能通过序号访问，而且不能有重复。<br>集合又分为可变集合（set）和不可变集合（frozenset）。</li></ul><hr><ul><li><h3 id="可变集合类型是set，创建可变集合可以使用set-iterable］）函数，或者用大括号｛｝将元素"><a href="#可变集合类型是set，创建可变集合可以使用set-iterable］）函数，或者用大括号｛｝将元素" class="headerlink" title="可变集合类型是set，创建可变集合可以使用set([iterable］）函数，或者用大括号｛｝将元素"></a>可变集合类型是set，创建可变集合可以使用set([iterable］）函数，或者用大括号｛｝将元素</h3>括起来，元素之间用逗号分隔。在PythonShell中运行示例代码如下：<blockquote><blockquote><p>a=<br>｛<br>’张三’，’李四川’王五<br>’<br>｝<br>①<br>a<br>｛<br>’张三<br>’，<br>’李囚’，<br>’王五<br>’<br>｝<br>a=｛’张三<br>’，<br>『李囚<br>’，<br>’王五<br>’，<br>E王五<br>’<br>｝<br>②<br>len{a)<br>3<br>a<br>｛<br>’张三<br>’，<br>’李囚’，<br>’王五<br>’<br>）<br>set{(20,10,50,40,30))<br>(40,10,50,20,30)</p></blockquote><p>b={}</p><blockquote><p>type(b)<br>&lt;class<br>’diet’&gt;<br>b<br>=set()<br>type(b)<br>&lt;class<br>’set’&gt;<br>③<br>④<br>⑤<br>上述代码第①行是使用大括号创建集合，<br>如果元素有重复的会怎样呢？代码第②行包含有<br>重复的元素，创建时会剔除重复元素。代码第③行是使用set（）函数创建集合对象。如果要创<br>建一个空的集合则不能使用｛｝表示，<br>见代码第④行，<br>b并不是集合而是字典，创建空集合要<br>使用空参数的set（）函数，见代码第⑤行。</p></blockquote></blockquote></li></ul><hr><ul><li><h3 id="修改可变集合"><a href="#修改可变集合" class="headerlink" title="修改可变集合"></a>修改可变集合</h3>可变集合类似于列表，可变集合的内容可以被修改，可以向其中插入和删除元素。修改可<br>变集合有几个常用的方法。<br>•add(elem）：添加元素，如果元素已经存在，则不能添加，不会抛出错误；<br>•remove(elem）：<br>删除元素，<br>如果元素不存在，则抛出错误；<br>•discard(elem）：<br>删除元素，<br>如果元素不存在，<br>不会抛出错误：<br>•pop（）：<br>删除返回集合中任意一个元素，返回值是删除的元素；<br>•clear（）：<br>清除集合。<br>在PythonShell中运行示例代码如下：<blockquote><blockquote><p>studentset=<br>｛<br>’张三<br>’，<br>’李凹<br>’，<br>’王五<br>’<br>｝<br>studentset.add（<br>’萤六<br>’<br>）<br>studentset<br>｛<br>’张三<br>’<br>，<br>E董六<br>’，<br>’李囚<br>’<br>，<br>e王五<br>’<br>｝<br>student<br>set<br>.remove<br>（<br>＇李四<br>’<br>）<br>studentset<br>｛<br>’张三<br>’，<br>E董六<br>’，<br>’王五<br>’<br>｝<br>student<br>set<br>.remove<br>（<br>＇李四<br>『）<br>Traceback(mostrecentcalllast):<br>File<br>”&lt;pyshell#l44&gt;”,<br>line1,in<module><br>studentset<br>.remove<br>（<br>＇李囚<br>’）<br>KeyError：’李囚<br>’<br>student<br>set<br>.discard（＇李囚<br>’<br>）</module></p></blockquote><p>stude口tset<br>｛<br>”张三<br>’，<br>’董六<br>’，<br>’王五<br>’<br>｝</p><blockquote><p>studentset<br>.discard<br>（<br>’王五<br>’<br>）<br>studentset<br>｛<br>＇张三<br>’，<br>’董六<br>’<br>｝<br>studentsetpop()<br>’张三<br>E<br>studentset<br>｛<br>『盖六<br>’<br>｝<br>studentset.clear()<br>studentset<br>set()<br>①<br>②<br>上述代码第①行使用remove（）方法删除元素时，由于要删除的’李囚’己经不在集合中，<br>所以会抛出错误。而同样是删除集合中不存在的元素，<br>discard（）方法不会抛出错误，<br>见代码第<br>②行。</p></blockquote></blockquote></li></ul><hr><ul><li><h3 id="遍历集合"><a href="#遍历集合" class="headerlink" title="遍历集合"></a>遍历集合</h3>集合是无序的，<br>没有索引，<br>不能通过下标访问单个元素。但可以遍历集合，访问集合每一<br>个元素。<br>一般使用for循环遍历集合，<br>示例代码如下：<br>studentset=<br>｛<br>’张三<br>’<br>，<br>’李凹<br>’，<br>’王五<br>’<br>｝<br>foritem<br>工nstudentset:<br>print(item)<br>print（『－－－－－－－－－－－＇<br>）<br>forl，工terninenumerate(studentset):<br>print(’{0}-<br>{1)’.format(i,item))<br>①<br>输出结果如下：<br>三五四<br>张王李<br>三五四<br>张王李<br>nu<br>句』＆气，也<br>代码第①行的for循环中使用了enumerate（）函数，该函数在9.1.4节遍历元组时己经介绍<br>过了，<br>但需要注意的是，<br>此时变量<br>1不是索引，<br>只是遍历集合的次数。</li></ul><hr><ul><li><h3 id="不可变集合"><a href="#不可变集合" class="headerlink" title="不可变集合"></a>不可变集合</h3>不可变集合类型是frozenset，创建不可变集合应使用frozenset([iterable］）函数，<br>不能使用<br>大括号｛｝。在PythonShell中运行示例代码如下：<blockquote><blockquote><p>studentset=frozenset（｛<br>’张三<br>’，<br>’李囚<br>’，<br>’王五<br>’｝）<br>①<br>studentset<br>frozenset（｛<br>’张三<br>’，<br>’李囚<br>’，<br>’王五<br>’｝）<br>type(student_set)<br>&lt;class<br>『frozenset’&gt;<br>studentset.add（<br>’董六<br>’）<br>Traceback(mostrecentcalllast):<br>File”&lt;pyshell#l68&gt;”,line1,in<module><br>studentset.add（<br>’盖六<br>’<br>）<br>AttributeError:’frozenset<br>’<br>。b〕ecthasnoattribute’add’<br>②<br>a=(21,32,43,45)<br>seta=frozenset(a)<br>③<br>seta<br>frozenset({32,45,43,21))<br>上述代码第①行是创建不可变集合，<br>frozenset（）的参数｛’张三『，’李四飞’王五<br>’｝是另一个<br>集合对象，<br>因为集合也是可选代对象，<br>可以作为frozenset（）的参数。代码第③行函数使用了一<br>个元组a作为frozenset（）的参数。<br>由于创建的是不变集合，<br>不能被修改，所以试图修改会发生错误，见代码第②行，<br>使用<br>add（）发生了错误。</module></p></blockquote></blockquote></li></ul><hr><ul><li><h3 id="集合推导式"><a href="#集合推导式" class="headerlink" title="集合推导式"></a>集合推导式</h3></li></ul><hr><p>集合推导式与列表推导式类似，<br>区别只是输出结果是集合。修改9.2.7节代码如下：<br>~coding=utf-8<br>＃代码文件：<br>chapter9/ch9<br>.35.py<br>n<br>l工st<br>={xforxinrange(100)ifx<br>毛<br>2<br>==<br>0<br>工f<br>x<br>毛<br>5<br>==0)<br>print(n_list)<br>输出结果如下：<br>{0,<br>70,40,10,80,50,20,90,60,30)<br>由于集合是不能有重复元素的，集合推导式输出的结果会过滤掉重复的元素，示例代码如下：<br>inputlist=[2,3,2,4,<br>5,<br>6,<br>6,<br>6]<br>nlist=[x**2forxininputl工st]<br>print(nlist)<br>}<br>＋<br>I』<br>5<br>工<br>、t辛<br>←」<br>u<br>ny<br>n<br>l<br>n<br>工<br>x<br>r<br>o<br>俨牛<br>qL<br>女<br>舍、<br>，，<br>•L<br>xe<br>J‘<br>s<br>=<br>n<br>(<br>•L<br>+<br>IM<br>en<br>s<br>-<br>-<br>E<br>np<br>输出结果如下：<br>[4,<br>9,<br>4,16,25,36,36,36]<br>{4,36,<br>9,16,25)<br>①<br>②<br>上述代码第①行是列表推导式，代码第②行是集合推导式，从结果可见没有重复的元素。</p><hr><ul><li><h3 id="字典"><a href="#字典" class="headerlink" title="字典"></a>字典</h3>字典（dieο是可迭代的、可变的数据结构，<br>通过键来访问元素。字典结构比较复杂，它是由<br>两部分视图构成的，<br>一个是键（key）视图，另一<br>个是值（value）视图。键视图不能包含重复元素，<br>而值集合可以，键和值是成对出现的。<br>键（key）视图<br>值（value）视图</li></ul><hr><ul><li><h3 id="创建字典"><a href="#创建字典" class="headerlink" title="创建字典"></a>创建字典</h3>字典类型是diet，创建字典可以使用diet（）函数，或者用大括号｛｝将“键·值”对括起来，<br>“键：值”对之间用冒号分隔。<br>在PythonShell中运行示例代码如下：<blockquote><blockquote><p>dictl={102:<br>’张三<br>’，<br>105<br>:<br>’李四<br>’，<br>109<br>:<br>’王五<br>’<br>｝<br>①<br>len(dictl)<br>3</p></blockquote><p>d工ctl<br>{102<br>·张三<br>’，<br>105:<br>’李四<br>『，<br>109<br>:<br>T王五<br>’<br>｝</p><blockquote></blockquote><p>type(d工ctl)<br>&lt;class<br>’dict’&gt;</p><blockquote></blockquote><p>d工ctl<br>={J</p><blockquote><p>dictl<br>{}</p></blockquote><p>dict({l02<br>：<br>’张三<br>’，<br>105<br>:<br>’李四＂<br>109:<br>E王五<br>’｝）<br>②<br>{102:<br>’张三<br>＇＇<br>105:<br>’李四<br>’，<br>109<br>E王五<br>’<br>｝</p><blockquote><p>diet(((102,<br>’张三<br>’），<br>(105,<br>’李囚<br>’<br>）<br>，<br>(109’<br>e王五’）））<br>③<br>{102:<br>’张三<br>『，<br>105<br>:<br>’李四<br>’，<br>109<br>:<br>’王五’｝<br>diet([(102,<br>E张三<br>’），<br>(105,<br>’李四<br>＇<br>）<br>＇<br>(109’<br>’王五’）］）<br>④<br>{102:<br>’张三<br>’，<br>105:<br>’李四<br>’，<br>109<br>:<br>’王五<br>’<br>｝<br>tl=<br>(102，’张三<br>自）<br>t2=<br>(105，’李囚<br>’<br>）<br>t3=(109,<br>’王五<br>’）<br>t<br>=(tl,t2,t3)<br>dict(t)<br>⑤<br>{102:<br>’张三<br>’，<br>105:<br>’李四<br>’，<br>109<br>:<br>’王五<br>’<br>｝<br>listl=[tl,t2,t3]</p></blockquote><p>dict(listl）⑥<br>{102:<br>’张三<br>’<br>，<br>105<br>:<br>’李四<br>’，<br>109<br>:<br>’王五『｝</p><blockquote></blockquote><p>dict(z工p([102,105,109],<br>［<br>’张三勺’李囚’，’王五<br>’］））<br>⑦<br>(102:<br>’张三<br>’，<br>105<br>:<br>『李四<br>’，<br>109<br>:<br>’王五<br>’<br>｝<br>上述代码第①行是使用大括号“键·值”对创建字典，这是最简单的创建字典方式。创建<br>一个空字典表达式是｛｝。获得字典长度（键值对个数）也是使用！en（）函数。<br>代码第②行、第③行、第④行、第⑤行和第⑥行都用diet（）函数创建字典。代码第②行<br>diet（）函数参数是另外一个字典｛l02：’张三’，<br>105：’李四<br>’，<br>109：<br>’王五’｝，使用这种方式不如直<br>接使用大括号“键<br>：值”方式。代码第③行和第⑤行参数是一个元组，这个元组中要包含三个<br>只有两个元素的元组，创建过程参考如图9-6。代码第④行和第⑥行参数是一个列表，这个列<br>表中包含三个只有两个元素的元组。<br>代码第⑦行使用了zip（）函数，<br>zip（）函数将两个可选代对象打包成元组，在创建字典时，<br>可选代对象元组需要两个可迭代对象，第一个是键（[102,105,109］），<br>第二个是值（［’张三<br>’，<br>’李四<br>’，<br>’王五’］〉，它们包含的元素个数相同，井且一一对应。</p></blockquote></li></ul><hr><ul><li><h3 id="修改字典"><a href="#修改字典" class="headerlink" title="修改字典"></a>修改字典</h3>字典可以被修改，但都是针对键和值同时操作，修改字典操作包括添加、<br>替换和删除<br>“键．值”对。<br>在PythonShell中运行示例代码如下：<blockquote><blockquote><p>dictl={102:<br>’张三<br>’，<br>105<br>:<br>’李四’，<br>109：’王五<br>’<br>｝</p></blockquote><p>dictl[l09］①<br>’王五<br>’</p><blockquote><p>dictl(110]<br>＝<br>’董六<br>’<br>dictl<br>{102:<br>E张三<br>’，<br>105<br>:<br>’李四<br>’，<br>109<br>:<br>’王五<br>’，<br>llO:<br>’董六<br>’<br>）<br>dictl(109]<br>＝<br>’张三<br>’<br>dictl<br>{102:<br>’张三<br>’，<br>105<br>:<br>’李四<br>’，<br>109:<br>’张三<br>’，<br>110<br>’董六<br>’<br>｝<br>deld工ctl(109]</p></blockquote><p>d工ctl<br>{102:<br>’张三<br>’，<br>l05:<br>’李四’，<br>l10<br>:<br>’董六<br>’<br>｝</p><blockquote><p>dictl.pop(105)<br>’李囚’<br>dictl<br>②<br>③{102:<br>’张三<br>’，<br>l10:<br>’董六<br>＇<br>｝</p><blockquote><p>dictl.pop(l05,<br>’董六<br>’）<br>⑤<br>’董六<br>『</p></blockquote></blockquote><p>d工ctl.pop工tern(}<br>⑥<br>(llO,<br>’董六<br>’<br>）</p><blockquote></blockquote><p>d工ctl<br>{102:<br>’张三<br>’<br>｝<br>访问字典中元素可通过下标实现，下标参数是键，返回对应的值，代码第①行中<br>dictl[109］是取出字典dictl中键为109的值。字典下标访问的元素也可以在赋值符号“＝”左<br>边，代码第②行是给字典<br>l10键赋值，注意此时字典dictl中没有<br>l10键，那么这样的操作会<br>添加<br>l10：<br>’董六<br>’键值对。如果键存在那么会替换对应的值，如代码第③行会将键<br>109对应的<br>值替换为<br>’张三’，<br>虽然此时值视图中己经有<br>’张三’了，但仍然可以添加，这说明值是可以重<br>复的。代码第④行是删除109键对应的值，注意del是语句不是函数。使用del语句删除键值<br>对时，如果键不存在会抛出错误。<br>如果喜欢使用一种方法删除元素，<br>可以使用字典的pop(key[,default］）和popitem（）方法。<br>pop(key[,default］）方法删除键值对时，如果键不存在则返回默认值（default），见代码第⑤行，<br>105键不存在返回默认值’董六<br>’。<br>popitem（）方法可以删除任意键值对，返回删除的键值对构<br>成元组，上述代码第⑥行删除了一个键值对，返回一个元组对象（110,＇董六1。</p></blockquote></li></ul><hr><ul><li><h3 id="访问字典"><a href="#访问字典" class="headerlink" title="访问字典"></a>访问字典</h3>字典还需要一些方法用来访问它的键戒值，这些方法如下。<br>•get(key[,default］）：通过键返回值，如果键不存在返回默认值。<br>•items（）：<br>返回字典的所有键值对。<br>•keys（）：返回字典键视图。<br>•values（）：返回字典值视图。<br>在PythonShell中运行示例代码如下：<blockquote><blockquote><p>dictl={102:<br>’张三<br>’，<br>105<br>:<br>’李四<br>’，<br>109:<br>’王五<br>’<br>｝<br>dictl.get(105）①<br>’李囚<br>’</p><blockquote><p>dictl.get(lOl,<br>’董六<br>’<br>）<br>②<br>③<br>d工ctl.get(l01)<br>’董六<br>E<br>dictl.items()<br>dietitems([(l02,<br>’张三<br>’）<br>，<br>(105’<br>’李囚<br>’），<br>(109’<br>’王五<br>’）］）<br>dictl.keys()<br>dietkeys([102,105,109]}<br>dictl.values()<br>dietvalues（［＇张三勺’李四<br>’，<br>『王五<br>’］）<br>上述代码第①行通过get（）方法返回<br>105键对应的值，如果没有键对应的值，而且还没有<br>为get（）方法提供默认值，<br>则不会有返回值，<br>见代码第②行。代码第③行提供了返回值。<br>在访问字典时，也可以使用in和notin运算符，但需要注意的是，<br>in和notin运算符只在<br>测试键视图中进行。在PythonShell中运行示例代码如下：<br>studentdiet＝<br>γ102’：’张三<br>’，<br>’105勺<br>’李囚<br>’，<br>’109’·<br>’王五『｝<br>102indictl<br>True<br>》〉<br>『李囚<br>’<br>indictl<br>False</p></blockquote></blockquote></blockquote></li></ul><hr><ul><li><h3 id="遍历字典"><a href="#遍历字典" class="headerlink" title="遍历字典"></a>遍历字典</h3>字典遍历也是字典的重要操作。与集合不同，字典有两个视图，因此遍历过程可以只遍历<br>值视图，也可以只遍历键视图，也可以同时遍历。这些遍历过程都是通过for循环实现的。<br>示例代码如下：<br>#<br>c。ding=utf<br>8<br>＃代码文件chapter9/ch9.4.4.py<br>studentdiet={102:<br>1张三<br>『，<br>105<br>:<br>’李四<br>’<br>，<br>109<br>’王五<br>’<br>｝<br>print<br>（’一－遍历键一－’<br>）<br>forstudentidinstudentd工ct<br>.keys():<br>①<br>print<br>（<br>’学号<br>’</li><li>st:r(studentid))<br>print<br>（’－一遍历值－－<br>’<br>）<br>forstudentnameinstudentdiet.values():<br>②<br>print<br>（<br>『学生<br>’</li><li>studentname)<br>pr工nt<br>（<br>’－一遍历键<br>．值一－<br>’<br>）<br>forstudentid,studentnameinstudentdiet<br>.items<br>（）<br>：<br>③<br>pr工nt<br>（<br>＇学号：<br>{0}<br>－<br>学生：<br>｛1}’.format(student_id,student_name))<br>输出结果如下：<br>一－遍历键一－<br>学号：<br>102<br>学号：<br>105<br>学号<br>109<br>－一遍历值－一<br>学生·<br>张三<br>学生：<br>李四<br>学生．<br>王五<br>一－遍历键<br>：值一－<br>学号<br>102－<br>学生：<br>张三<br>学号：<br>105<br>－学生：<br>李四<br>学号：<br>109<br>－<br>学生：<br>王五<br>上述代码第③行遍历字典的键值对，<br>items（）方法返回键值对元组序列，<br>student_id,<br>studentname是从元组拆包出来的两个变量。</li></ul><hr><ul><li><h3 id="从元组拆包出来的两个变量。"><a href="#从元组拆包出来的两个变量。" class="headerlink" title="从元组拆包出来的两个变量。"></a>从元组拆包出来的两个变量。</h3></li></ul><p>9.4.5<br>字典推导式<br>因为字典包含了键和值两个不同的结构，因此字典推导式结果可以非常灵活。字典推导示<br>例代码如下：<br>#c口d工口g=utf-8<br>＃代码文件：<br>chapter9/ch9<br>.4<br>.5<br>.py<br>inputdiet={’one’:<br>1,<br>’two’:2,<br>‘three’<br>：<br>3，『four’:<br>4}<br>outputdiet={k:vfork,vininputdiet.items{)ifv<br>毛<br>2<br>==<br>0）①<br>print{output_diet)<br>keys=[kfork,vininputdiet.items（）工f<br>v<br>毛<br>2<br>==OJ<br>print(keys)<br>②<br>输出结果如下：<br>{’two’:<br>2,<br>’four’:<br>4}<br>[‘two’,’four’]<br>上述代码第①行是字典推导式，注意输入结构不能直接使用字典，因为字典不是序列，<br>可以通过字典的item（）方法返回字典中键值对序列。代码第②行是字典推导式，但只返回键<br>结构。</p><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;&lt;code&gt;Python中数据结构主要有序列、集合和字典.&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&quot;元组&quot;&gt;&lt;a href=&quot;#元组&quot; class=&quot;headerlink&quot; title=&quot;元组&quot;&gt;&lt;/a&gt;元组&lt;/h1&gt;&lt;hr&gt;
&lt;p</summary>
      
    
    
    
    <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
    <category term="python学习记录" scheme="http://yoursite.com/tags/python%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>编写博文笔录</title>
    <link href="http://yoursite.com/posts/7b74.html"/>
    <id>http://yoursite.com/posts/7b74.html</id>
    <published>2020-01-31T23:29:00.000Z</published>
    <updated>2020-09-28T17:38:53.247Z</updated>
    
    <content type="html"><![CDATA[<hr><h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><hr><h3 id="宗旨"><a href="#宗旨" class="headerlink" title="宗旨"></a>宗旨</h3><p>Markdown 的目标是实现「易读易写」。</p><p>一份使用 Markdown 格式撰写的文件应该可以直接以纯文本发布，并且看起来不会像是由许多标签或是格式指令所构成。</p><h3 id="兼容HTML"><a href="#兼容HTML" class="headerlink" title="兼容HTML"></a>兼容HTML</h3><p>Markdown 语法的目标是：成为一种适用于网络的书写语言。</p><p>Markdown 的构想不是要使得 HTML 文档更容易书写。Markdown 的理念是，能让文档更容易读、写和随意改。</p><hr><h1 id="添加目录"><a href="#添加目录" class="headerlink" title="添加目录"></a>添加目录</h1><hr><ol><li><strong>在首行段落中填写 <code>@[TOC]</code> 以显示全文内容的目录结构,前提是使用了分级目录（h1~h6)</strong></li><li><strong>默认显示的是文章目录，如果想改变目录标题的名称，可以使用 <code>@[TOC](这里写目录标题)</code> 这种方式</strong></li></ol><hr><h1 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h1><hr><p><strong><em>Markdown 标题有两种格式</em></strong></p><h3 id="1-使用-和-标记一级和二级标题"><a href="#1-使用-和-标记一级和二级标题" class="headerlink" title="1.使用=和-标记一级和二级标题"></a>1.使用=和-标记一级和二级标题</h3><pre class="line-numbers language-md" data-language="md"><code class="language-md">我展示的是一级标题==================我展示的是二级标题------------------<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><em>效果如下</em>：</p><hr><blockquote><h1 id="我展示的是一级标题"><a href="#我展示的是一级标题" class="headerlink" title="我展示的是一级标题"></a>我展示的是一级标题</h1><h1 id="我展示的是二级标题"><a href="#我展示的是二级标题" class="headerlink" title="我展示的是二级标题"></a>我展示的是二级标题</h1></blockquote><h3 id="2-使用-号可表示-1-6-级标题，一级标题对应一个-号，二级标题对应两个-号，以此类推。"><a href="#2-使用-号可表示-1-6-级标题，一级标题对应一个-号，二级标题对应两个-号，以此类推。" class="headerlink" title="2.使用 # 号可表示 1-6 级标题，一级标题对应一个 # 号，二级标题对应两个 # 号，以此类推。"></a>2.使用 # 号可表示 1-6 级标题，一级标题对应一个 # 号，二级标题对应两个 # 号，以此类推。</h3><pre class="line-numbers language-md" data-language="md"><code class="language-md"># 一级标题## 二级标题### 三级标题#### 四级标题##### 五级标题###### 六级标题<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><em>效果如下</em>：</p><hr><blockquote><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6></blockquote><hr><h1 id="段落-文本换行"><a href="#段落-文本换行" class="headerlink" title="段落/文本换行"></a>段落/文本换行</h1><hr><p>Markdown 段落没有特殊的格式,直接编写文字就好, <strong><code>段落换行是使用两个以上的空格加上回车/使用一个空行重新开始一个新的段落/使用html标签&lt;br&gt;。</code></strong></p><pre class="line-numbers language-md" data-language="md"><code class="language-md">1.段落(两个空格+回车)  2.&lt;br&gt;段落&lt;/br&gt;(使用html语言换行标签)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><em>效果如下</em>：</p><hr><blockquote><p>1.段落</p><p><br>2.段落<br></p></blockquote><pre class="line-numbers language-md" data-language="md"><code class="language-md">1.段落2.段落<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><em>效果如下</em>：</p><hr><blockquote><p>1.段落</p><p>2.段落</p></blockquote><hr><h1 id="文本添加缩进"><a href="#文本添加缩进" class="headerlink" title="文本添加缩进"></a>文本添加缩进</h1><hr><pre class="line-numbers language-md" data-language="md"><code class="language-md">你好呀，未进行缩进的正常文本&amp;#160;你好呀（缩进1/4个中文）&amp;nbsp;你好呀（缩进1/4个中文）&amp;#8194;你好呀（缩进1/2个中文，1个字符）&amp;ensp;你好呀（缩进1/2个中文，1个字符）&amp;#8195;你好呀（缩进1个中文，2个字符）&amp;emsp;你好呀（缩进1个中文，2个字符）你好呀，未进行缩进的正常文本<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><em>效果如下</em>：</p><hr><p>你好呀，未进行缩进的正常文本<br>&nbsp;你好呀（缩进1/4个中文）<br>&nbsp;你好呀（缩进1/4个中文）<br> 你好呀（缩进1/2个中文，1个字符）<br> 你好呀（缩进1/2个中文，1个字符）<br> 你好呀（缩进1个中文，2个字符）<br> 你好呀（缩进1个中文，2个字符）<br>你好呀，未进行缩进的正常文本</p><p><strong>使用html标签 <code>&lt;style&gt;</code> 实现</strong></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">text-indent</span><span class="token punctuation">:</span>1em</span><span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>你好呀<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">text-indent</span><span class="token punctuation">:</span>2em</span><span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>你好呀<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><em>效果如下</em>：</p><p style="text-indent:1em">你好呀</p><p style="text-indent:2em">你好呀</p><hr><h1 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h1><hr><p><strong>Markdown 可以使用以下几种字体</strong>：</p><pre class="line-numbers language-md" data-language="md"><code class="language-md">*斜体文本*_斜体文本_**粗体文本**__粗体文本__***粗斜体文本***___粗斜体文本___<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><em>效果如下</em>： </p><hr><p><em>斜体文本</em><br><em>斜体文本</em><br><strong>粗体文本</strong><br><strong>粗体文本</strong><br><strong><em>粗斜体文本</em></strong><br><strong><em>粗斜体文本</em></strong></p><hr><h1 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h1><hr><p>在一行中用三个以上的 <strong><em><code>星号、减号、底线</code></em></strong> 来建立一个分隔线，行内不能有其他东西或在 <strong><em><code>星号或是减号中间插入空格</code></em></strong>。下面每种写法都可以建立分隔线：</p><pre class="line-numbers language-md" data-language="md"><code class="language-md">+ ***+ * * *+ *****+  - - -+  ----------<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><em>效果如下</em>：</p><hr><blockquote><p>第一种</p></blockquote><hr><blockquote><p>第二种</p></blockquote><hr><blockquote><p>第三种</p></blockquote><hr><blockquote><p>第四种</p></blockquote><hr><blockquote><p>第五种</p></blockquote><hr><hr><h1 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h1><hr><p>如果段落上的文字要添加删除线，只需要在文字的两端加上两个波浪线 <strong><code>~~</code></strong> 即可</p><pre class="line-numbers language-md" data-language="md"><code class="language-md">delete~~delete~~<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><em>效果如下</em>：</p><hr><p><strong>delete</strong><br><strong><del>delete</del></strong></p><hr><h1 id="下划线"><a href="#下划线" class="headerlink" title="下划线"></a>下划线</h1><hr><p><strong>下划线可以通过 HTML 的 <u></u> 标签来实现</strong></p><pre class="line-numbers language-md" data-language="md"><code class="language-md">&lt;u&gt;带下划线文本&lt;/u&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><em>效果如下</em>：</p><p><strong><u>带下划线文本</u></strong></p><hr><p>注释</p><hr><p><strong>使用html的注释方式</strong>：<br>**<code>&lt;!-- 注释 --&gt;</code>**<br><em>效果如下</em>：</p><hr><blockquote><!-- 注释 --><p><strong><em>(注释掉了)</em></strong></p></blockquote><hr><h1 id="脚注"><a href="#脚注" class="headerlink" title="脚注"></a>脚注</h1><hr><p><strong>脚注是对文本的补充说明，Markdown 脚注的格式如下</strong>:</p><pre class="line-numbers language-md" data-language="md"><code class="language-md">[^要注明的文本]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><em>以下实例演示了脚注的用法</em>：</p><pre class="line-numbers language-none"><code class="language-none">创建脚注格式 [^1] [^1]: 菜鸟教程 -- 学的不仅是技术，更是梦想！😊<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><em>效果如下</em>：</p><hr><p>创建脚注格式[^1]<br>[^1]:菜鸟教程 – 学的不仅是技术，更是梦想！😊</p><hr><h1 id="Markdown列表"><a href="#Markdown列表" class="headerlink" title="Markdown列表"></a>Markdown列表</h1><hr><p><strong>Markdown 支持有序列表和无序列表</strong></p><h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h3><p>有序列表使用数字并加上 <strong><code>.</code></strong> 号来表示，如：</p><pre class="line-numbers language-md" data-language="md"><code class="language-md">1. 第一项2. 第二项3. 第三项<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><em>效果如下</em>：</p><hr><ol><li>第一项</li><li>第二项</li><li>第三项</li></ol><h3 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h3><p>无序列表使用 <strong><em><code>星号(*)、加号(+)或是减号(-)</code></em></strong> 作为列表标记：</p><pre class="line-numbers language-md" data-language="md"><code class="language-md">* 第一项* * 第二项* * 第三项* ------ 分割线 ------* + 第一项* + 第二项* + 第三项* ------ 分割线 ------* - 第一项* - 第二项* - 第三项  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><em>效果如下</em>:</p><hr><ul><li>第一项</li><li>第二项</li><li>第三项</li></ul><p>—— 分割线 ——</p><ul><li>第一项</li><li>第二项</li><li>第三项</li></ul><p>—— 分割线 ——</p><ul><li>第一项</li><li>第二项</li><li>第三项</li></ul><hr><h3 id="列表嵌套"><a href="#列表嵌套" class="headerlink" title="列表嵌套"></a>列表嵌套</h3><hr><p>列表嵌套只需在子列表中的选项 <strong><em><code>添加四个空格</code></em></strong> 即可：</p><pre class="line-numbers language-md" data-language="md"><code class="language-md">1. 第一项：    - 第一项嵌套的第一个元素    - 第一项嵌套的第二个元素2. 第二项：    - 第二项嵌套的第一个元素    - 第二项嵌套的第二个元素<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><em>效果如下</em>:</p><hr><ol><li>第一项：<ul><li>第一项嵌套的第一个元素</li><li>第一项嵌套的第二个元素</li></ul></li><li>第二项：<ul><li>第二项嵌套的第一个元素</li><li>第二项嵌套的第二个元素</li></ul></li></ol><hr><h1 id="Markdown-区块"><a href="#Markdown-区块" class="headerlink" title="Markdown 区块"></a>Markdown 区块</h1><hr><h3 id="区块引用"><a href="#区块引用" class="headerlink" title="区块引用"></a>区块引用</h3><p>Markdown 区块引用是在段落开头使用 <strong><code>&gt;</code></strong> 符号 ，然后后面紧跟 <strong>一个空格符号</strong>：</p><pre class="line-numbers language-md" data-language="md"><code class="language-md">&gt; 区块引用&gt;  菜鸟教程&gt; 学的不仅是技术更是梦想<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><em>效果如下</em>：</p><hr><blockquote><p>区块引用<br>菜鸟教程<br>学的不仅是技术更是梦想</p></blockquote><hr><h3 id="区块使用列表"><a href="#区块使用列表" class="headerlink" title="区块使用列表"></a>区块使用列表</h3><hr><p>区块中使用列表实例如下：</p><pre class="line-numbers language-md" data-language="md"><code class="language-md">&gt; 区块中使用列表&gt; 1. 第一项&gt; 2. 第二项&gt; + 第一项&gt; + 第二项&gt; + 第三项<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><em>效果如下</em>:</p><hr><blockquote><p>区块中使用列表</p><ol><li>第一项</li><li>第二项</li></ol><ul><li>第一项</li><li>第二项</li><li>第三项</li></ul></blockquote><hr><h3 id="列表中使用区块"><a href="#列表中使用区块" class="headerlink" title="列表中使用区块"></a>列表中使用区块</h3><hr><p>如果要在列表项目内放进区块，那么就需要在 <strong><code>&gt;</code> 前添加四个空格的缩进</strong>。<br>区块中使用列表实例如下：</p><pre class="line-numbers language-md" data-language="md"><code class="language-md">* 第一项     &gt; 菜鸟教程     &gt; 学的不仅是技术更是梦想* 第二项     &gt;欢迎光临<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><em>效果如下</em>：</p><hr><ul><li>第一项<blockquote><p>菜鸟教程<br>学的不仅是技术更是梦想</p></blockquote></li><li>第二项<blockquote><p>欢迎光临</p></blockquote></li></ul><hr><h1 id="Markdown代码"><a href="#Markdown代码" class="headerlink" title="Markdown代码"></a>Markdown代码</h1><hr><h3 id="单行代码"><a href="#单行代码" class="headerlink" title="单行代码"></a>单行代码</h3><p>如果是单行代码或段落上的一个函数或片段的代码可以用 <strong><code>反引号对</code></strong> 把它括起来，例如：</p><pre class="line-numbers language-md" data-language="md"><code class="language-md">`printf("Hello World");`<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><em>效果如下</em>：</p><hr><p><em><code>printf("Hello World");</code></em></p><hr><h3 id="代码区块"><a href="#代码区块" class="headerlink" title="代码区块"></a>代码区块</h3><hr><p>代码区块使用 <strong><em><code>三个反引号对</code></em></strong> 包裹一段代码，并指定一种语言（也可以不指定）：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Hello World!\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><em>效果如下</em>：</p><hr><blockquote><p>#include &lt;stdio.h&gt;<br>int main()<br>{<br>        printf(“Hello World!\n”);<br>        return 0;<br>}</p></blockquote><hr><h1 id="上标与下标"><a href="#上标与下标" class="headerlink" title="上标与下标"></a>上标与下标</h1><ol><li><strong>上标用法</strong>：</li></ol><p><strong>使用双 <code>^</code> 括住内容</strong>, <strong>如</strong>：</p><pre class="line-numbers language-nd" data-language="nd"><code class="language-nd">x^2^<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><em>效果如下</em>：</p><blockquote><p>x^2^</p></blockquote><ol start="2"><li><strong>下标用法</strong>：</li></ol><p><strong>使用双 <code>~</code> 括住内容</strong>, <strong>如</strong>：</p><pre class="line-numbers language-md" data-language="md"><code class="language-md">H~2~0<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><em>效果如下</em>：</p><blockquote><p>H<del>2</del>0</p></blockquote><hr><h1 id="Markdown超链接"><a href="#Markdown超链接" class="headerlink" title="Markdown超链接"></a>Markdown超链接</h1><hr><p>链接使用方法如下：</p><pre class="line-numbers language-md" data-language="md"><code class="language-md">[链接名称](链接地址)或者&lt;链接地址&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><em>效果如下</em>：</p><hr><p><a href="%E9%93%BE%E6%8E%A5%E5%9C%B0%E5%9D%80">链接名称</a></p><p>或者</p><p>&lt;链接地址&gt;</p><p><strong>例如</strong>：<br><a href="https://linuecs.wordpress.com/">我的博客</a></p><p><a href="https://linuecs.wordpress.com/">https://linuecs.wordpress.com</a></p><hr><h3 id="高级链接"><a href="#高级链接" class="headerlink" title="高级链接"></a>高级链接</h3><hr><pre class="line-numbers language-md" data-language="md"><code class="language-md">链接也可以用变量来代替，文档末尾附带变量地址：这个链接用 1 作为网址变量 [Google][1]这个链接用 baidu 作为网址变量 [百度][baidu]然后在文档的结尾为变量赋值（网址）[1]:http://www.google.com/[baidu]:http://www.baidu.com/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><em>效果如下</em>：</p><hr><p>链接也可以用变量来代替，文档末尾附带变量地址：<br>这个链接用 1 作为网址变量 [Google][1]<br>这个链接用 baidu 作为网址变量 [百度][baidu]<br>然后在文档的结尾为变量赋值（网址）<br>[1]:<a href="http://www.google.com/">http://www.google.com/</a><br>[baidu]:<a href="http://www.baidu.com/">http://www.baidu.com/</a></p><hr><h1 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h1><hr><p><strong><em>Markdown 图片语法格式如下</em></strong>：</p><pre class="line-numbers language-md" data-language="md"><code class="language-md">![alt 属性文本](图片地址)![alt 属性文本](图片地址 "可选标题")<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li>开头一个 <strong><em>感叹号</em></strong> <strong><code>!</code></strong></li><li>接着一个 <strong><em>方括号</em></strong> <strong><code>[]</code></strong> ，里面放上图片的替代文字</li><li>接着一个 <strong><em>普通括号</em></strong>  <strong><code>()</code></strong> ，里面放上图片的网址，最后还可以用 <strong><em>引号</em></strong> <strong><code>""</code></strong> 包住并加上选择性的 <strong><code>'title'</code></strong> 属性的文字  </li></ul><p><em>使用实例</em>：</p><hr><pre class="line-numbers language-md" data-language="md"><code class="language-md">![百度Logo](https://www.baidu.com/img/bd_logo.png)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><em>效果如下</em>：</p><hr><p><img src="https://www.baidu.com/img/bd_logo.png" alt="百度Logo"></p><hr><h1 id="Markdown表格"><a href="#Markdown表格" class="headerlink" title="Markdown表格"></a>Markdown表格</h1><hr><p><strong>Markdown 制作表格使用 <code>|</code> 来分隔不同的单元格，使用 <code>-</code> 来分隔表头和其他行</strong><br><em>语法格式如下</em>：</p><pre class="line-numbers language-md" data-language="md"><code class="language-md">|  表头   | 表头  ||  ----  | ----  || 单元格  | 单元格 || 单元格  | 单元格 |<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><em>效果如下</em>：</p><hr><table><thead><tr><th>表头</th><th>表头</th></tr></thead><tbody><tr><td>单元格</td><td>单元格</td></tr><tr><td>单元格</td><td>单元格</td></tr></tbody></table><hr><p><strong>对齐方式</strong><br><em>设置表格的对齐方式</em>：</p><ul><li><strong><code>-:</code></strong> 设置内容和标题栏居右对齐</li><li><strong><code>:-</code></strong> 设置内容和标题栏居左对齐</li><li><strong><code>:-</code></strong>: 设置内容和标题栏居中对齐</li></ul><hr><p><em>实例如下</em>：</p><pre class="line-numbers language-md" data-language="md"><code class="language-md">| 左对齐 | 右对齐 | 居中对齐 || :-----| ----: | :----: || 单元格 | 单元格 | 单元格 || 单元格 | 单元格 | 单元格 |<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><em>效果如下</em>：</p><hr><table><thead><tr><th align="left">左对齐</th><th align="right">右对齐</th><th align="center">居中对齐</th></tr></thead><tbody><tr><td align="left">单元格</td><td align="right">单元格</td><td align="center">单元格</td></tr><tr><td align="left">单元格</td><td align="right">单元格</td><td align="center">单元格</td></tr></tbody></table><hr><h1 id="插入视频"><a href="#插入视频" class="headerlink" title="插入视频"></a>插入视频</h1><p><strong>插入视频实现方式</strong>：</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>video</span> <span class="token attr-name">controls</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">autoplay</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>media<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.w3school.com.cn/example/html5/mov_bbb.mp4<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>video/mp4<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>video</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><em>效果如下</em>：</p><hr><video controls="" autoplay="" name="media">    <source src="https://www.w3school.com.cn/example/html5/mov_bbb.mp4" type="video/mp4"></video><hr><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>iframe</span>    <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>100%</span>    <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>120px</span>    <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>//player.bilibili.com/player.html?aid=455564468&amp;bvid=BV1H541147nA&amp;cid=187808769&amp;page=1<span class="token punctuation">'</span></span>    <span class="token attr-name">frameborder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span>    <span class="token attr-name">allowfullscreen</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>iframe</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><em>效果如下</em>：</p><hr><iframe width="100%" height="120px" src="//player.bilibili.com/player.html?aid=455564468&amp;bvid=BV1H541147nA&amp;cid=187808769&amp;page=1" frameborder="0" allowfullscreen=""></iframe><p><strong>src里面填视频原URL</strong><br><strong>width是视频宽度（可以填百分比）</strong><br><strong>height是视频高度（可以填百分比）</strong></p><hr><h1 id="插入音乐"><a href="#插入音乐" class="headerlink" title="插入音乐"></a>插入音乐</h1><hr><p><strong>插入音乐的实现方式</strong>：</p><pre class="line-numbers language-none"><code class="language-none">&lt;iframe name="music" src="http://music.163.com/song/media/outer/url?id=1382359170.mp3" marginwidth="1px" marginheight="20px" width=100% height="80px" frameborder=1 　scrolling="yes"&gt;&lt;/iframe&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><em>效果如下</em>：</p><hr><iframe name="music" src="http://music.163.com/song/media/outer/url?id=1382359170.mp3" marginwidth="1px" marginheight="20px" width="100%" height="80px" frameborder="1" 　scrolling="yes"></iframe>***<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>life</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>iframe</span> <span class="token attr-name">frameborder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>no<span class="token punctuation">"</span></span> <span class="token attr-name">marginwidth</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">marginheight</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>300</span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>140</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://music.163.com/outchain/player?type=2&amp;id=34341360&amp;auto=0&amp;height=66<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>iframe</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>*效果如下*:<div align="life"><iframe frameborder="no" marginwidth="0" marginheight="0" width="300" height="140" src="https://music.163.com/outchain/player?type=2&amp;id=34341360&amp;auto=0&amp;height=66"></iframe></div><hr><ul><li><strong><em>div用于控制格式，若无则默认为居左</em></strong></li><li><strong><em>frameborder用于规定是否显示框架周围的边框，1为是，0为否</em></strong></li><li><strong><em>marginwidth及marginheight表示距离边缘的像素大小</em></strong></li><li><strong><em>width及height表示播放条的长度和宽度</em></strong></li><li><strong><em>src为播放链接，可以在如网易云音乐的生成外链播放器获取该链接，同时也获得以下代码，并可以自行更改；也可将音频链接改为视频链接，从而播放视频</em></strong></li></ul><p><strong>推荐一个获取各大音乐MP3格式的网站</strong>：</p><p><a href="http://music.aitao456.com/">链接</a></p><hr><h1 id="Markdown高级技巧"><a href="#Markdown高级技巧" class="headerlink" title="Markdown高级技巧"></a>Markdown高级技巧</h1><hr><h3 id="1-支持的-HTML-元素"><a href="#1-支持的-HTML-元素" class="headerlink" title="1.支持的 HTML 元素"></a>1.支持的 HTML 元素</h3><p><strong>不在 Markdown 涵盖范围之内的标签，都可以直接在文档里面用 <code>HTML</code> 撰写。</strong></p><h3 id="2-转义"><a href="#2-转义" class="headerlink" title="2.转义"></a>2.转义</h3><p><strong>Markdown 使用了很多特殊符号来表示特定的意义，如果需要显示特定的符号则需要使用转义字符，Markdown 使用反斜杠转义特殊字符</strong>：</p><pre class="line-numbers language-md" data-language="md"><code class="language-md">**文本加粗** \*\* 正常显示星号 \*\*<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><em>效果如下</em>：</p><hr><p><strong>文本加粗</strong><br>** 正常显示星号 **</p><p><strong>Markdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号</strong>：</p><ul><li><strong>\      反斜线</strong></li><li><strong>`     反引号</strong></li><li><strong>*    星号</strong></li><li><strong>_     下划线</strong></li><li><strong>{}    花括号</strong></li><li><strong>[]    方括号</strong></li><li><strong>()    小括号</strong></li><li><strong>#     井字号</strong></li><li><strong>+     加号</strong></li><li><strong>-     减号</strong></li><li><strong>.     英文句点</strong></li><li><strong>!     感叹号</strong></li></ul><hr><h1 id="文字颜色、大小、字体"><a href="#文字颜色、大小、字体" class="headerlink" title="文字颜色、大小、字体"></a>文字颜色、大小、字体</h1><hr><h3 id="1-字体大小"><a href="#1-字体大小" class="headerlink" title="1.字体大小"></a>1.字体大小</h3><hr><pre class="line-numbers language-md" data-language="md"><code class="language-md">size为1：&lt;font size="1"&gt;size为1&lt;/font&gt;                                     size为2：&lt;font size="2"&gt;size为2&lt;/font&gt;size为3：&lt;font size="3"&gt;size为3&lt;/font&gt;size为4：&lt;font size="4"&gt;size为4&lt;/font&gt;size为6：&lt;font size="6"&gt;size为6&lt;/font&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><em>效果如下</em>：</p><hr><blockquote><p>size为1：<font size="1">size为1</font><br>size为2：<font size="2">size为2</font><br>size为3：<font size="3">size为3</font><br>size为4：<font size="4">size为4</font><br>size为6：<font size="6">size为6</font></p></blockquote><hr><h3 id="2-颜色"><a href="#2-颜色" class="headerlink" title="2.颜色"></a>2.颜色</h3><p><strong>在markdown中采用如下方式能够控制文字的颜色</strong>：</p><pre class="line-numbers language-md" data-language="md"><code class="language-md">&lt;font color="#dd0000"&gt;文字颜色预览&lt;/font&gt; <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><em>效果如下</em>：</p><hr><p><font color="#0000FF">文字颜色预览</font></p><hr><p><strong><em>颜色名与进制列表</em></strong>：</p><table><thead><tr><th align="center"><strong><code>颜色名</code></strong></th><th align="center"><strong><code>十六进制颜色值</code></strong></th></tr></thead><tbody><tr><td align="center"><strong><em>AliceBlue</em></strong></td><td align="center"><font color="#F0F8FF"> <strong>#F0F8FF</strong> </font></td></tr><tr><td align="center"><strong><em>AntiqueWhite</em></strong></td><td align="center"><font color="#FAEBD7"> <strong>#FAEBD7</strong> </font></td></tr><tr><td align="center"><strong><em>Aqua</em></strong></td><td align="center"><font color="#00FFFF"> <strong>#00FFFF</strong> </font></td></tr><tr><td align="center"><strong><em>Aquamarine</em></strong></td><td align="center"><font color="#7FFFD4"> <strong>#7FFFD4</strong> </font></td></tr><tr><td align="center"><strong><em>Azure</em></strong></td><td align="center"><font color="#F0FFFF"> <strong>#F0FFFF</strong> </font></td></tr><tr><td align="center"><strong><em>Beige</em></strong></td><td align="center"><font color="#F5F5DC"> <strong>#F5F5DC</strong> </font></td></tr><tr><td align="center"><strong><em>Bisque</em></strong></td><td align="center"><font color="#FFE4C4"> <strong>#FFE4C4</strong> </font></td></tr><tr><td align="center"><strong><em>Black</em></strong></td><td align="center"><font color="#000000"> <strong>#000000</strong> </font></td></tr><tr><td align="center"><strong><em>BlanchedAlmond</em></strong></td><td align="center"><font color="#FFEBCD"> <strong>#FFEBCD</strong> </font></td></tr><tr><td align="center"><strong><em>Blue</em></strong></td><td align="center"><font color="#0000FF"> <strong>#0000FF</strong> </font></td></tr><tr><td align="center"><strong><em>BlueViolet</em></strong></td><td align="center"><font color="#8A2BE2"> <strong>#8A2BE2</strong> </font></td></tr><tr><td align="center"><strong><em>Brown</em></strong></td><td align="center"><font color="#A52A2A"> <strong>#A52A2A</strong> </font></td></tr><tr><td align="center"><strong><em>BurlyWood</em></strong></td><td align="center"><font color="#DEB887"> <strong>#DEB887</strong> </font></td></tr><tr><td align="center"><strong><em>CadetBlue</em></strong></td><td align="center"><font color="#5F9EA0">#5F9EA0</font></td></tr><tr><td align="center"><strong><em>Chartreuse</em></strong></td><td align="center"><font color="#7FFF00">#7FFF00</font></td></tr><tr><td align="center"><strong><em>Chocolate</em></strong></td><td align="center"><font color="#D2691E">#D2691E</font></td></tr><tr><td align="center"><strong><em>Coral</em></strong></td><td align="center"><font color="#FF7F50">#FF7F50</font></td></tr><tr><td align="center"><strong><em>CornflowerBlue</em></strong></td><td align="center"><font color="#6495ED">#6495ED</font></td></tr><tr><td align="center"><strong><em>Cornsilk</em></strong></td><td align="center"><font color="#FFF8DC">#FFF8DC</font></td></tr><tr><td align="center"><strong><em>Crimson</em></strong></td><td align="center"><font color="#DC143C">#DC143C</font></td></tr><tr><td align="center"><strong><em>Cyan</em></strong></td><td align="center"><font color="#00FFFF">#00FFFF</font></td></tr><tr><td align="center"><strong><em>DarkBlu</em></strong>e</td><td align="center"><font color="#00008B">#00008B</font></td></tr><tr><td align="center"><strong><em>DarkCyan</em></strong></td><td align="center"><font color="#008B8B">#008B8B</font></td></tr><tr><td align="center"><strong><em>DarkGoldenRod</em></strong></td><td align="center"><font color="#B8860B">#B8860B</font></td></tr><tr><td align="center"><strong><em>DarkGray</em></strong></td><td align="center"><font color="#A9A9A9">#A9A9A9</font></td></tr><tr><td align="center"><strong><em>DarkGreen</em></strong></td><td align="center"><font color="#006400">#006400</font></td></tr><tr><td align="center"><strong><em>DarkKhaki</em></strong></td><td align="center"><font color="#BDB76B">#BDB76B</font></td></tr><tr><td align="center"><strong><em>DarkMagenta</em></strong></td><td align="center"><font color="#8B008B">#8B008B</font></td></tr><tr><td align="center"><strong><em>DarkOliveGreen</em></strong></td><td align="center"><font color="#556B2F">#556B2F</font></td></tr><tr><td align="center"><strong><em>Darkorange</em></strong></td><td align="center"><font color="#FF8C00">#FF8C00</font></td></tr><tr><td align="center"><strong><em>DarkOrchid</em></strong></td><td align="center"><font color="#9932CC">#9932CC</font></td></tr><tr><td align="center"><strong><em>DarkRed</em></strong></td><td align="center"><font color="#8B0000">#8B0000</font></td></tr><tr><td align="center"><strong><em>DarkSalmon</em></strong></td><td align="center"><font color="#E9967A">#E9967A</font></td></tr><tr><td align="center"><strong><em>DarkSeaGreen</em></strong></td><td align="center"><font color="#8FBC8F">#8FBC8F</font></td></tr><tr><td align="center"><strong><em>DarkSlateBlue</em></strong></td><td align="center"><font color="#483D8B">#483D8B</font></td></tr><tr><td align="center"><strong><em>DarkSlateGray</em></strong></td><td align="center"><font color="#2F4F4F">#2F4F4F</font></td></tr><tr><td align="center"><strong><em>DarkTurquoise</em></strong></td><td align="center"><font color="#00CED1">#00CED1</font></td></tr><tr><td align="center"><strong><em>DarkViolet</em></strong></td><td align="center"><font color="#9400D3">#9400D3</font></td></tr><tr><td align="center"><strong><em>DeepPink</em></strong></td><td align="center"><font color="#FF1493">#FF1493</font></td></tr><tr><td align="center"><strong><em>DeepSkyBlue</em></strong></td><td align="center"><font color="#00BFFF">#00BFFF</font></td></tr><tr><td align="center"><strong><em>DimGray</em></strong></td><td align="center"><font color="#696969">#696969</font></td></tr><tr><td align="center"><strong><em>DodgerBlue</em></strong></td><td align="center"><font color="#1E90FF">#1E90FF</font></td></tr><tr><td align="center"><strong><em>Feldspar</em></strong></td><td align="center"><font color="#D19275">#D19275</font></td></tr><tr><td align="center"><strong><em>FireBrick</em></strong></td><td align="center"><font color="#B22222">#B22222</font></td></tr><tr><td align="center"><strong><em>FloralWhite</em></strong></td><td align="center"><font color="#FFFAF0">#FFFAF0</font></td></tr><tr><td align="center"><strong><em>ForestGreen</em></strong></td><td align="center"><font color="#228B22">#228B22</font></td></tr><tr><td align="center"><strong><em>Fuchsia</em></strong></td><td align="center"><font color="#FF00FF">#FF00FF</font></td></tr><tr><td align="center"><strong><em>Gainsboro</em></strong></td><td align="center"><font color="#DCDCDC">#DCDCDC</font></td></tr><tr><td align="center"><strong><em>GhostWhite</em></strong></td><td align="center"><font color="#F8F8FF">#F8F8FF</font></td></tr><tr><td align="center"><strong><em>Gold</em></strong></td><td align="center"><font color="#FFD700">#FFD700</font></td></tr><tr><td align="center"><strong><em>GoldenRod</em></strong></td><td align="center"><font color="#DAA520">#DAA520</font></td></tr><tr><td align="center"><strong><em>Gray</em></strong></td><td align="center"><font color="#808080">#808080</font></td></tr><tr><td align="center"><strong><em>Green</em></strong></td><td align="center"><font color="#008000">#008000</font></td></tr><tr><td align="center"><strong><em>GreenYellow</em></strong></td><td align="center"><font color="#ADFF2F">#ADFF2F</font></td></tr><tr><td align="center"><strong><em>HoneyDew</em></strong></td><td align="center"><font color="#F0FFF0">#F0FFF0</font></td></tr><tr><td align="center"><strong><em>HotPink</em></strong></td><td align="center"><font color="#FF69B4">#FF69B4</font></td></tr><tr><td align="center"><strong><em>IndianRed</em></strong></td><td align="center"><font color="#CD5C5C">#CD5C5C</font></td></tr><tr><td align="center"><strong><em>Indigo</em></strong></td><td align="center"><font color="#4B0082">#4B0082</font></td></tr><tr><td align="center"><strong><em>Ivory</em></strong></td><td align="center"><font color="#FFFFF0">#FFFFF0</font></td></tr><tr><td align="center"><strong><em>Khaki</em></strong></td><td align="center"><font color="#F0E68C">#F0E68C</font></td></tr><tr><td align="center"><strong><em>Lavender</em></strong></td><td align="center"><font color="#E6E6FA">#E6E6FA</font></td></tr><tr><td align="center"><strong><em>LavenderBlush</em></strong></td><td align="center"><font color="#FFF0F5">#FFF0F5</font></td></tr><tr><td align="center"><strong><em>LawnGreen</em></strong></td><td align="center"><font color="#7CFC00">#7CFC00</font></td></tr><tr><td align="center"><strong><em>LemonChiffon</em></strong></td><td align="center"><font color="#FFFACD">#FFFACD</font></td></tr><tr><td align="center"><strong><em>LightBlue</em></strong></td><td align="center"><font color="#ADD8E6">#ADD8E6</font></td></tr><tr><td align="center"><strong><em>LightCoral</em></strong></td><td align="center"><font color="#F08080">#F08080</font></td></tr><tr><td align="center"><strong><em>LightCyan</em></strong></td><td align="center"><font color="#E0FFFF">#E0FFFF</font></td></tr><tr><td align="center"><strong><em>LightGoldenRodYellow</em></strong></td><td align="center"><font color="#FAFAD2">#FAFAD2</font></td></tr><tr><td align="center"><strong><em>LightGrey</em></strong></td><td align="center"><font color="#D3D3D3">#D3D3D3</font></td></tr><tr><td align="center"><strong><em>LightGreen</em></strong></td><td align="center"><font color="#90EE90">#90EE90</font></td></tr><tr><td align="center"><strong><em>LightPink</em></strong></td><td align="center"><font color="#FFB6C1">#FF86C1</font></td></tr><tr><td align="center"><strong><em>LightSalmon</em></strong></td><td align="center"><font color="#FFA07A">#FFA07A</font></td></tr><tr><td align="center"><strong><em>LightSeaGreen</em></strong></td><td align="center"><font color="#20B2AA">#20B2AA</font></td></tr><tr><td align="center"><strong><em>LightSkyBlue</em></strong></td><td align="center"><font color="#87CEFA">#87CEFA</font></td></tr><tr><td align="center"><strong><em>LightSlateBlue</em></strong></td><td align="center"><font color="#8470FF">#8470FF</font></td></tr><tr><td align="center"><strong><em>LightSlateGray</em></strong></td><td align="center"><font color="#778899">#778899</font></td></tr><tr><td align="center"><strong><em>LightSteelBlue</em></strong></td><td align="center"><font color="#B0C4DE">#B0C4DE</font></td></tr><tr><td align="center"><strong><em>LightYellow</em></strong></td><td align="center"><font color="#FFFFE0">#FFFFE0</font></td></tr><tr><td align="center"><strong><em>Lime</em></strong></td><td align="center"><font color="#00FF00">#00FF00</font></td></tr><tr><td align="center"><strong><em>LimeGreen</em></strong></td><td align="center"><font color="#32CD32">#32DC32</font></td></tr><tr><td align="center"><strong><em>Linen</em></strong></td><td align="center"><font color="#FAF0E6">#FAF0E6</font></td></tr><tr><td align="center"><strong><em>Magenta</em></strong></td><td align="center"><font color="#FF00FF">#FF00FF</font></td></tr><tr><td align="center"><strong><em>Maroon</em></strong></td><td align="center"><font color="#800000">#800000</font></td></tr><tr><td align="center"><strong><em>MediumAquaMarine</em></strong></td><td align="center"><font color="#66CDAA">#66CDAA</font></td></tr><tr><td align="center"><strong><em>MediumBlue</em></strong></td><td align="center"><font color="#0000CD">#0000CD</font></td></tr><tr><td align="center"><strong><em>MediumOrchid</em></strong></td><td align="center"><font color="#BA55D3">#BA55D3</font></td></tr><tr><td align="center"><strong><em>MediumPurple</em></strong></td><td align="center"><font color="#9370D8">#9370D8</font></td></tr><tr><td align="center"><strong><em>MediumSeaGreen</em></strong></td><td align="center"><font color="#3CB371">#3CB371</font></td></tr><tr><td align="center"><strong><em>MediumSlateBlue</em></strong></td><td align="center"><font color="#7B68EE">#7B68EE</font></td></tr><tr><td align="center"><strong><em>MediumSpringGreen</em></strong></td><td align="center"><font color="#00FA9A">#00FA9A</font></td></tr><tr><td align="center"><strong><em>MediumTurquoise</em></strong></td><td align="center"><font color="#48D1CC">#48D1CC</font></td></tr><tr><td align="center"><strong><em>MediumVioletRed</em></strong></td><td align="center"><font color="#C71585">#C71585</font></td></tr><tr><td align="center"><strong><em>MidnightBlue</em></strong></td><td align="center"><font color="#191970">#191970</font></td></tr><tr><td align="center"><strong><em>MintCream</em></strong></td><td align="center"><font color="#F5FFFA">#F5FFFA</font></td></tr><tr><td align="center"><strong><em>MistyRose</em></strong></td><td align="center"><font color="#FFE4E1">#FFE4E1</font></td></tr><tr><td align="center"><strong><em>Moccasin</em></strong></td><td align="center"><font color="#FFE4B5">#FFE485</font></td></tr><tr><td align="center"><strong><em>NavajoWhite</em></strong></td><td align="center"><font color="#FFDEAD">#FFDEAD</font></td></tr><tr><td align="center"><strong><em>Navy</em></strong></td><td align="center"><font color="#000080">#00080</font></td></tr><tr><td align="center"><strong><em>OldLace</em></strong></td><td align="center"><font color="#FDF5E6">#FDFD5E6</font></td></tr><tr><td align="center"><strong><em>Olive</em></strong></td><td align="center"><font color="#808000">#808000</font></td></tr><tr><td align="center"><strong><em>OliveDrab</em></strong></td><td align="center"><font color="#6B8E23">#6B8E23</font></td></tr><tr><td align="center"><strong><em>Orange</em></strong></td><td align="center"><font color="#FFA500">#FFA500</font></td></tr><tr><td align="center"><strong><em>OrangeRed</em></strong></td><td align="center"><font color="#FF4500">#FF4500</font></td></tr><tr><td align="center"><strong><em>Orchid</em></strong></td><td align="center"><font color="#DA70D6">#DA70D6</font></td></tr><tr><td align="center"><strong><em>PaleGoldenRod</em></strong></td><td align="center"><font color="#EEE8AA">#EEE8AA</font></td></tr><tr><td align="center"><strong><em>PaleGreen</em></strong></td><td align="center"><font color="#98FB98">#98FB98</font></td></tr><tr><td align="center"><strong><em>PaleTurquoise</em></strong></td><td align="center"><font color="#AFEEEE">#AFEEEE</font></td></tr><tr><td align="center"><strong><em>PaleVioletRed</em></strong></td><td align="center"><font color="#D87093">#D87093</font></td></tr><tr><td align="center"><strong><em>PapayaWhip</em></strong></td><td align="center"><font color="#FFEFD5">#FFEFD5</font></td></tr><tr><td align="center"><strong><em>PeachPuff</em></strong></td><td align="center"><font color="#FFDAB9">#FFDA89</font></td></tr><tr><td align="center"><strong><em>Peru</em></strong></td><td align="center"><font color="#CD853F">#CD853F</font></td></tr><tr><td align="center"><strong><em>Pink</em></strong></td><td align="center"><font color="#FFC0CB">#FFC0CB</font></td></tr><tr><td align="center"><strong><em>Plum</em></strong></td><td align="center"><font color="#DDA0DD">#DDA0DD</font></td></tr><tr><td align="center"><strong><em>PowderBlue</em></strong></td><td align="center"><font color="#B0E0E6">#B0E0E6</font></td></tr><tr><td align="center"><strong><em>Purple</em></strong></td><td align="center"><font color="#800080">#800080</font></td></tr><tr><td align="center"><strong><em>Red</em></strong></td><td align="center"><font color="#FF0000">#FF0000</font></td></tr><tr><td align="center"><strong><em>RosyBrown</em></strong></td><td align="center"><font color="#BC8F8F">#BC8F8F</font></td></tr><tr><td align="center"><strong><em>RoyalBlue</em></strong></td><td align="center"><font color="#4169E1">#4169E1</font></td></tr><tr><td align="center"><strong><em>SaddleBrown</em></strong></td><td align="center"><font color="#8B4513">#8B4513</font></td></tr><tr><td align="center"><strong><em>Salmon</em></strong></td><td align="center"><font color="#FA8072">#FA8072</font></td></tr><tr><td align="center"><strong><em>SandyBrown</em></strong></td><td align="center"><font color="#F4A460">#F4A460</font></td></tr><tr><td align="center"><strong><em>SeaGreen</em></strong></td><td align="center"><font color="#2E8B57">#2E8B57</font></td></tr><tr><td align="center"><strong><em>SeaShell</em></strong></td><td align="center"><font color="#FFF5EE">#FFF5EE</font></td></tr><tr><td align="center"><strong><em>Sienna</em></strong></td><td align="center"><font color="#A0522D">#A0522D</font></td></tr><tr><td align="center"><strong><em>Silver</em></strong></td><td align="center"><font color="#C0C0C0">#C0C0C0</font></td></tr><tr><td align="center"><strong><em>SkyBlue</em></strong></td><td align="center"><font color="#87CEEB">#87CEEB</font></td></tr><tr><td align="center"><strong><em>SlateBlue</em></strong></td><td align="center"><font color="#6A5ACD">#6A5ACD</font></td></tr><tr><td align="center"><strong><em>SlateGray</em></strong></td><td align="center"><font color="#708090">#708090</font></td></tr><tr><td align="center"><strong><em>Snow</em></strong></td><td align="center"><font color="#FFFAFA">#FFFFAF</font></td></tr><tr><td align="center"><strong><em>SpringGreen</em></strong></td><td align="center"><font color="#00FF7F">#00FF7F</font></td></tr><tr><td align="center"><strong><em>SteelBlue</em></strong></td><td align="center"><font color="#4682B4">#4682B4</font></td></tr><tr><td align="center"><strong><em>Tan</em></strong></td><td align="center"><font color="#D2B48C">#D2B48C</font></td></tr><tr><td align="center"><strong><em>Teal</em></strong></td><td align="center"><font color="#008080">#008080</font></td></tr><tr><td align="center"><strong><em>Thistle</em></strong></td><td align="center"><font color="#D8BFD8">#D8BFD8</font></td></tr><tr><td align="center"><strong><em>Tomato</em></strong></td><td align="center"><font color="#FF6347">#FF6347</font></td></tr><tr><td align="center"><strong><em>Turquoise</em></strong></td><td align="center"><font color="#40E0D0">#40E0D0</font></td></tr><tr><td align="center"><strong><em>Violet</em></strong></td><td align="center"><font color="#EE82EE">#EE82EE</font></td></tr><tr><td align="center"><strong><em>VioletRed</em></strong></td><td align="center"><font color="#D02090">#D02090</font></td></tr><tr><td align="center"><strong><em>Wheat</em></strong></td><td align="center"><font color="#F5DEB3">#F5DEB3</font></td></tr><tr><td align="center"><strong><em>White</em></strong></td><td align="center"><font color="#FFFFFF">#FFFFFF</font></td></tr><tr><td align="center"><strong><em>WhiteSmoke</em></strong></td><td align="center"><font color="#F5F5F5">#F5F5F5</font></td></tr><tr><td align="center"><strong><em>Yellow</em></strong></td><td align="center"><font color="#FFFF00">#FFFF00</font></td></tr><tr><td align="center"><strong><em>YellowGreen</em></strong></td><td align="center"><font color="#9ACD32">#9ACD32</font></td></tr></tbody></table><hr><p><strong>综合实例</strong>：</p><pre class="line-numbers language-none"><code class="language-none">&lt;font face="黑体"&gt;我是黑体字&lt;/font&gt;&lt;font face="微软雅黑"&gt;我是微软雅黑&lt;/font&gt;&lt;font face="STCAIYUN"&gt;我是华文彩云&lt;/font&gt;&lt;font color=#0099ff size=12 face="黑体"&gt;黑体&lt;/font&gt;&lt;font color=#00ffff size=3&gt;null&lt;/font&gt;&lt;font color=gray size=5&gt;gray&lt;/font&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><em>效果如下</em>：</p><hr><p><font face="黑体">我是黑体字</font><br><font face="微软雅黑">我是微软雅黑</font><br><font face="STCAIYUN">我是华文彩云</font><br><font color="#0099ff" size="12" face="黑体">黑体</font><br><font color="#00ffff" size="3">null</font><br><font color="gray" size="5">gray</font></p><hr><h1 id="缩进（空格）"><a href="#缩进（空格）" class="headerlink" title="缩进（空格）"></a>缩进（空格）</h1><hr><pre class="line-numbers language-none"><code class="language-none">半方大的空白&amp;ensp;或&amp;#8194;{}全方大的空白&amp;emsp;或&amp;#8195;()不断行的空白格&amp;nbsp;或&amp;#160;[]&amp;emsp;&amp;emsp;段落从此开始<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><em>效果如下</em>：</p><hr><blockquote><p>半方大的空白 或 {}<br>全方大的空白 或 ()<br>不断行的空白格&nbsp;或&nbsp;[]<br>  段落从此开始</p></blockquote><hr><h1 id="背景色"><a href="#背景色" class="headerlink" title="背景色"></a>背景色</h1><hr><p><strong>Markdown本身不支持背景色设置，需要采用内置html的方式实现：借助 table, tr, td 等表格标签的 bgcolor 属性来实现背景色的功能。举例如下</strong>：</p><pre class="line-numbers language-none"><code class="language-none">&lt;table&gt;&lt;tr&gt;&lt;td bgcolor=orange&gt;背景色是：orange&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;table&gt;&lt;tr&gt;&lt;td bgcolor=#FF00FF&gt;背景色的设置是按照十六进制颜色值：#7FFFD4&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;table&gt;&lt;tr&gt;&lt;td bgcolor=#FF83FA&gt;背景色的设置是按照十六进制颜色值：#FF83FA&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;table&gt;&lt;tr&gt;&lt;td bgcolor=#D1EEEE&gt;背景色的设置是按照十六进制颜色值：#D1EEEE&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;table&gt;&lt;tr&gt;&lt;td bgcolor=#C0FF3E&gt;背景色的设置是按照十六进制颜色值：#C0FF3E&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;table&gt;&lt;tr&gt;&lt;td bgcolor=#54FF9F&gt;背景色的设置是按照十六进制颜色值：#54FF9F&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><em>效果如下</em>：</p><hr><table><tbody><tr><td bgcolor="orange">背景色是：orange</td></tr></tbody></table><table><tbody><tr><td bgcolor="#FF00FF">背景色的设置是按照十六进制颜色值：#7FFFD4</td></tr></tbody></table><table><tbody><tr><td bgcolor="#FF83FA">背景色的设置是按照十六进制颜色值：#FF83FA</td></tr></tbody></table><table><tbody><tr><td bgcolor="#D1EEEE">背景色的设置是按照十六进制颜色值：#D1EEEE</td></tr></tbody></table><table><tbody><tr><td bgcolor="#C0FF3E">背景色的设置是按照十六进制颜色值：#C0FF3E</td></tr></tbody></table><table><tbody><tr><td bgcolor="#54FF9F">背景色的设置是按照十六进制颜色值：#54FF9F</td></tr></tbody></table><hr><h1 id="使用LaTex数学公式"><a href="#使用LaTex数学公式" class="headerlink" title="使用LaTex数学公式"></a>使用LaTex数学公式</h1><hr><h3 id="1-行内公式"><a href="#1-行内公式" class="headerlink" title="1.行内公式"></a>1.行内公式</h3><p><strong>使用两个 <code>$</code> 符号引用公式</strong>:</p><pre class="line-numbers language-none"><code class="language-none">$公式$<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-行间公式"><a href="#2-行间公式" class="headerlink" title="2.行间公式"></a>2.行间公式</h3><p><strong>使用两对 <code>$$</code> 符号引用公式</strong>：</p><pre class="line-numbers language-none"><code class="language-none">$$公式$$ <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h1 id="普通符号和数学符号使用"><a href="#普通符号和数学符号使用" class="headerlink" title="普通符号和数学符号使用"></a>普通符号和数学符号使用</h1><hr><p><strong><a href="https://www.mathjax.org/">Markdown数学符号使用</a>中，详细介绍了一些常用的数学公式</strong><br><em><a href="https://blog.csdn.net/smilehappiness/article/details/105450389">其他好文章</a></em></p><hr><h1 id="设置图片大小"><a href="#设置图片大小" class="headerlink" title="设置图片大小"></a>设置图片大小</h1><hr><h3 id="1-设置图片百分比"><a href="#1-设置图片百分比" class="headerlink" title="1.设置图片百分比"></a>1.设置图片百分比</h3><pre class="line-numbers language-none"><code class="language-none">&lt;img src="http://pic11.photophoto.cn/20090626/0036036341009653_b.jpg" width="50%" height="50%"&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><em>效果如下</em>：</p><hr><img src="http://pic11.photophoto.cn/20090626/0036036341009653_b.jpg" width="50%" height="50%"><h3 id="2-设置图片大小"><a href="#2-设置图片大小" class="headerlink" title="2.设置图片大小"></a>2.设置图片大小</h3><pre class="line-numbers language-none"><code class="language-none">&lt;img src="http://pic11.photophoto.cn/20090626/0036036341009653_b.jpg" width="251" height="350" &gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><em>效果如下</em>：</p><hr><img src="http://pic11.photophoto.cn/20090626/0036036341009653_b.jpg" width="251" height="350"><h3 id="3-设置图片居中"><a href="#3-设置图片居中" class="headerlink" title="3.设置图片居中"></a>3.设置图片居中</h3><pre class="line-numbers language-none"><code class="language-none">&lt;div align=right&gt;&lt;img src="http://pic11.photophoto.cn/20090626/0036036341009653_b.jpg" width="50%" height="50%"&gt;&lt;/div&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><em>效果如下</em>：</p><hr><div align="right"><img src="http://pic11.photophoto.cn/20090626/0036036341009653_b.jpg" width="50%" height="50%"></div><blockquote><p>通过 center 居中 ，把center换成 left 和 right 可以实现居左或者居右<br>width 和 height 调控高度和宽度</p></blockquote><hr><h1 id="其他常用html标签"><a href="#其他常用html标签" class="headerlink" title="其他常用html标签"></a>其他常用html标签</h1><hr><h3 id="1-折叠块-summary"><a href="#1-折叠块-summary" class="headerlink" title="1.折叠块(summary)"></a>1.折叠块(summary)</h3><p><strong>使用html标签 <code>&lt;summary&gt;</code> 实现</strong></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>details</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span> 点击打开 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span> 欢迎来到菜鸟驿站！ <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>details</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><em>效果如下</em>：</p><hr><details>  <summary> 点击打开 </summary>  <p> 欢迎来到菜鸟驿站！</p></details><h3 id="2-图片-img"><a href="#2-图片-img" class="headerlink" title="2.图片 (img)"></a>2.图片 (img)</h3><p><strong>使用html标签 <code>&lt;img&gt;</code> 实现</strong></p><pre class="line-numbers language-md" data-language="md"><code class="language-md">&lt;img align="middle" alt="Logo" src="http://img5.2345.com/duoteimg/zixunImg/local/2016/03/18/14582940693488.gif" title="hover" width="20%" /&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><em>效果如下</em>：</p><hr><img align="middle" alt="&quot;Logo&quot;" src="http://img5.2345.com/duoteimg/zixunImg/local/2016/03/18/14582940693488.gif" title="hover" width="20%"><h3 id="3-对齐-align"><a href="#3-对齐-align" class="headerlink" title="3.对齐 (align)"></a>3.对齐 (align)</h3><p><strong>使用html标签 <code>&lt;align&gt;</code> 实现</strong></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">text-align</span><span class="token punctuation">:</span>right</span><span class="token punctuation">"</span></span> <span class="token punctuation">&gt;</span></span>-- 《论语》<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><em>效果如下</em>：</p><hr><div style="text-align:right">-- 《论语》</div><h3 id="4-注释-comment"><a href="#4-注释-comment" class="headerlink" title="4.注释 (comment)"></a>4.注释 (comment)</h3><p><strong>使用html标签 <code>&lt;comment&gt;</code> 实现</strong><br><strong>采用html注释标签</strong> </p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token comment">&lt;!-- 这里不会显示 --&gt;</span> <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><em>效果如下</em>：</p><hr><p><strong><em><!-- 这里不会显示 --></em></strong></p><h3 id="5-文字居中"><a href="#5-文字居中" class="headerlink" title="5.文字居中"></a>5.文字居中</h3><p><strong>使用html标签 <code>&lt;center&gt;</code> 实现</strong></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>center</span><span class="token punctuation">&gt;</span></span>这一行需要居中<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>center</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><em>效果如下</em>：</p><hr><center> 这一行需要居中 </center><hr><h1 id="Markdown常用特殊符号"><a href="#Markdown常用特殊符号" class="headerlink" title="Markdown常用特殊符号"></a>Markdown常用特殊符号</h1><hr><table><thead><tr><th align="center">符号</th><th align="center">说明</th><th align="center">对应的编码</th></tr></thead><tbody><tr><td align="center"><strong>&amp;</strong></td><td align="center"><em>AND 符号</em></td><td align="center"><code>&amp;amp;</code></td></tr><tr><td align="center"><strong>&gt;</strong></td><td align="center"><em>小于</em></td><td align="center"><code>&amp;lt;</code></td></tr><tr><td align="center"><strong>&gt;</strong></td><td align="center"><em>大于</em></td><td align="center"><code>&amp;gt;</code></td></tr><tr><td align="center"><code> </code></td><td align="center"><em>空格</em></td><td align="center"><code>&amp;nbsp;</code></td></tr><tr><td align="center"><strong>¿</strong></td><td align="center"><em>倒问号</em></td><td align="center"><code>&amp;iquest;</code></td></tr><tr><td align="center"><strong>?</strong></td><td align="center"><em>问号</em></td><td align="center"><code>&amp;quest;</code></td></tr><tr><td align="center"><strong>«</strong></td><td align="center"><em>左书名号</em></td><td align="center"><code>&amp;laquo;</code></td></tr><tr><td align="center"><strong>»</strong></td><td align="center"><em>右书名号</em></td><td align="center"><code>&amp;raquo;</code></td></tr><tr><td align="center"><strong>“</strong></td><td align="center"><em>引号</em></td><td align="center"><code>&amp;quot;</code></td></tr><tr><td align="center"><strong>‘</strong></td><td align="center"><em>左单引号</em></td><td align="center"><code>&amp;lsquo;</code></td></tr><tr><td align="center"><strong>’</strong></td><td align="center">*右单引号</td><td align="center"><code>&amp;rsquo;</code></td></tr><tr><td align="center"><strong>“</strong></td><td align="center"><em>左双引号</em></td><td align="center"><code>&amp;ldquo;</code></td></tr><tr><td align="center"><strong>”</strong></td><td align="center"><em>右双引号</em></td><td align="center"><code>&amp;rdquo;</code></td></tr><tr><td align="center"><strong>¶</strong></td><td align="center"><em>段落符号</em></td><td align="center"><code>&amp;para;</code></td></tr><tr><td align="center"><strong>§</strong></td><td align="center"><em>章节符</em></td><td align="center"><code>&amp;sect;</code></td></tr><tr><td align="center"><strong>×</strong></td><td align="center"><em>乘号</em></td><td align="center"><code>&amp;times;</code></td></tr><tr><td align="center"><strong>÷</strong></td><td align="center"><em>除号</em></td><td align="center"><code>&amp;divide;</code></td></tr><tr><td align="center"><strong>±</strong></td><td align="center"><em>加减号</em></td><td align="center"><code>&amp;plusmn;</code></td></tr><tr><td align="center"><strong>ƒ</strong></td><td align="center"><em>function</em></td><td align="center"><code>&amp;fnof;</code></td></tr><tr><td align="center"><strong>√</strong></td><td align="center"><em>根号</em></td><td align="center"><code>&amp;radic;</code></td></tr><tr><td align="center"><strong>∞</strong></td><td align="center"><em>无穷大</em></td><td align="center"><code>&amp;infin;</code></td></tr><tr><td align="center"><strong>°</strong></td><td align="center"><em>度</em></td><td align="center"><code>&amp;deg;</code></td></tr><tr><td align="center"><strong>≠</strong></td><td align="center"><em>不等号</em></td><td align="center"><code>&amp;ne;</code></td></tr><tr><td align="center"><strong>≡</strong></td><td align="center"><em>恒等于</em></td><td align="center"><code>&amp;equiv;</code></td></tr><tr><td align="center"><strong>≤</strong></td><td align="center"><em>小于等</em>于</td><td align="center"><code>&amp;le;</code></td></tr><tr><td align="center"><strong>≥</strong></td><td align="center"><em>大于等</em>于</td><td align="center"><code>&amp;ge;</code></td></tr><tr><td align="center"><strong>⊥</strong></td><td align="center"><em>垂直符</em>号</td><td align="center"><code>&amp;perp;</code></td></tr><tr><td align="center"><strong>←</strong></td><td align="center"><em>左箭头</em></td><td align="center"><code>&amp;larr;</code></td></tr><tr><td align="center"><strong>→</strong></td><td align="center"><em>右箭头</em></td><td align="center"><code>&amp;rarr;</code></td></tr><tr><td align="center"><strong>↑</strong></td><td align="center"><em>上箭头</em></td><td align="center"><code>&amp;uarr;</code></td></tr><tr><td align="center"><strong>↓</strong></td><td align="center"><em>下箭头</em></td><td align="center"><code>&amp;darr;</code></td></tr><tr><td align="center"><strong>↔</strong></td><td align="center"><em>水平箭头</em></td><td align="center"><code>&amp;harr;</code></td></tr><tr><td align="center"><strong>↕</strong></td><td align="center"><em>竖直箭头</em></td><td align="center"><code>&amp;varr;</code></td></tr><tr><td align="center"><strong>⇐</strong></td><td align="center"><em>双线左箭头</em></td><td align="center"><code>&amp;lArr;</code></td></tr><tr><td align="center"><strong>⇒</strong></td><td align="center"><em>双线右箭头</em></td><td align="center"><code>&amp;rArr;</code></td></tr><tr><td align="center"><strong>⇑</strong></td><td align="center"><em>双线上箭头</em></td><td align="center"><code>&amp;uArr;</code></td></tr><tr><td align="center"><strong>⇓</strong></td><td align="center">%双线上箭头*</td><td align="center"><code>&amp;dArr;</code></td></tr><tr><td align="center"><strong>⇔</strong></td><td align="center"><em>双线水平双箭头</em></td><td align="center"><code>&amp;hArr;</code></td></tr><tr><td align="center"><strong>⇕</strong></td><td align="center"><em>双线竖直箭头</em></td><td align="center"><code>&amp;vArr;</code></td></tr><tr><td align="center"><strong>♠</strong></td><td align="center"><em>黑桃</em></td><td align="center"><code>&amp;spades;</code></td></tr><tr><td align="center"><strong>♥</strong></td><td align="center"><em>红桃</em></td><td align="center"><code>&amp;hearts;</code></td></tr><tr><td align="center"><strong>♣</strong></td><td align="center"><em>梅花</em></td><td align="center"><code>&amp;clubs;</code></td></tr><tr><td align="center"><strong>♦</strong></td><td align="center"><em>方块</em></td><td align="center"><code>&amp;diams;</code></td></tr><tr><td align="center"><strong>©</strong></td><td align="center"><em>版权</em></td><td align="center"><code>&amp;copy;</code></td></tr><tr><td align="center"><strong>®</strong></td><td align="center"><em>注册商标</em></td><td align="center"><code>&amp;reg;</code></td></tr><tr><td align="center"><strong>™</strong></td><td align="center"><em>商标</em></td><td align="center"><code>&amp;trade</code>;</td></tr><tr><td align="center"><strong>¥</strong></td><td align="center"><em>人民币</em></td><td align="center"><code>&amp;yen;</code></td></tr><tr><td align="center"><strong>€</strong></td><td align="center"><em>欧元</em></td><td align="center"><code>&amp;euro;</code></td></tr><tr><td align="center"><strong>¢</strong></td><td align="center"><em>美分</em></td><td align="center"><code>&amp;cent;</code></td></tr><tr><td align="center"><strong>£</strong></td><td align="center"><em>英磅</em></td><td align="center"><code>&amp;pound;</code></td></tr><tr><td align="center"><strong>⊕</strong></td><td align="center"></td><td align="center"><code>&amp;oplus;</code></td></tr><tr><td align="center"><strong>½</strong></td><td align="center"><em>二分之一</em></td><td align="center"><code>&amp;frac12;</code></td></tr><tr><td align="center"><strong>¼</strong></td><td align="center"><em>四分之一</em></td><td align="center"><code>&amp;frac14;</code></td></tr><tr><td align="center"><strong>‰</strong></td><td align="center"><em>千分符号</em></td><td align="center"><code>&amp;permil;</code></td></tr><tr><td align="center"><strong>∴</strong></td><td align="center"><em>所以</em></td><td align="center"><code>&amp;there4;</code></td></tr><tr><td align="center"><strong>π</strong></td><td align="center"><em>圆周率</em></td><td align="center"><code>&amp;pi;</code></td></tr><tr><td align="center"><strong>¹</strong></td><td align="center"><em>商标1</em></td><td align="center"><code>&amp;sup1;</code></td></tr><tr><td align="center"><strong>α</strong></td><td align="center"><em>alpha</em></td><td align="center"><code>&amp;alpha;</code></td></tr><tr><td align="center"><strong>β</strong></td><td align="center"><em>beta</em></td><td align="center"><code>&amp;beta;</code></td></tr><tr><td align="center"><strong>γ</strong></td><td align="center"><em>gamma</em></td><td align="center"><code>&amp;gamma;</code></td></tr><tr><td align="center"><strong>δ</strong></td><td align="center"><em>delta</em></td><td align="center"><code>&amp;delta;</code></td></tr><tr><td align="center"><strong>θ</strong></td><td align="center"><em>theta</em></td><td align="center"><code>&amp;theta;</code></td></tr><tr><td align="center"><strong>λ</strong></td><td align="center"><em>lambda</em></td><td align="center"><code>&amp;lambda;</code></td></tr><tr><td align="center"><strong>σ</strong></td><td align="center"><em>sigma</em></td><td align="center"><code>&amp;sigma;</code></td></tr><tr><td align="center"><strong>τ</strong></td><td align="center"><em>tau</em></td><td align="center"><code>&amp;tau;</code></td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;hr&gt;
&lt;h1 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h1&gt;&lt;hr&gt;
&lt;h3 id=&quot;宗旨&quot;&gt;&lt;a href=&quot;#宗旨&quot; class=&quot;headerlink&quot; title=&quot;宗旨&quot;&gt;&lt;/a&gt;宗旨&lt;</summary>
      
    
    
    
    <category term="hexo" scheme="http://yoursite.com/categories/hexo/"/>
    
    
    <category term="markdown" scheme="http://yoursite.com/tags/markdown/"/>
    
    <category term="html" scheme="http://yoursite.com/tags/html/"/>
    
    <category term="学习记录" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
</feed>
